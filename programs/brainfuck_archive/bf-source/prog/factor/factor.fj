// The next code was created as part of the bf2fj (Brainfuck to Flipjump) project: https://github.com/tomhea/bf2fj


HEXES_IN_BYTE = 2
BITS_IN_HEX = 4
DEFAULT_LABEL_PADDINGS = 16
// NOTE: standard values, for a program of size 10,000 random bf-ops: w=32, @=21.

stl.startup_and_init_pointers brainfuck_start


ptr: hex.vec w/BITS_IN_HEX, brainfuck_memory  // this is the main data-pointer that brainfuck operates on.

ret_register: bit.bit           // used for the brainfuck ops fast-calls.
inner_ret_register: bit.bit     // used for the read/write *ptr fast-calls.
// Complexity: @-1
def call label < ret_register {
    stl.fcall label, ret_register
}
// Complexity: 1
def return < ret_register {
    stl.fret ret_register
}

def call_inner label < inner_ret_register {
    stl.fcall label, inner_ret_register
}
// Complexity: 1
def return_inner < inner_ret_register {
    stl.fret inner_ret_register
}

temp_byte: hex.vec HEXES_IN_BYTE        // can be changed between read_pointed_byte..() to write_temp_byte(..) calls.

repetition_optimization_byte: hex.vec HEXES_IN_BYTE     // can be changed, as it's an input to data-optimization macros.

PTR_OPTIMIZE_OFFSET_HEX_LENGTH = 3
PTR_OPTIMIZE_OFFSET_HEX_SHIFT = 1
// can be changed, as it's an input to ptr-optimization macros.
repetition_optimization_ptr_offset: hex.vec PTR_OPTIMIZE_OFFSET_HEX_LENGTH

//  Time Complexity: w(0.75@+ 5) + 9@+13   ( ~870 ops, according to the standard values)
// Space Complexity: w(0.75@+29) + 9@+72   (~1700 ops, according to the standard values)
//    temp_byte = stl.pointers.read_byte = *ptr[:2]
def read_pointed_byte_to_temp_byte < ptr, temp_byte {
    hex.read_byte temp_byte, ptr
}
pad DEFAULT_LABEL_PADDINGS
read_pointed_byte_to_temp_byte:
    read_pointed_byte_to_temp_byte
    return_inner

//  Time Complexity: 12@      (~250 ops, according to the standard values)
// Space Complexity: 12@+176  (~430 ops, according to the standard values)
//    *ptr[:2] ^= (temp_byte ^ _original_byte)
def write_temp_byte_to_pointed_byte < hex.pointers.read_byte, temp_byte {
    hex.xor HEXES_IN_BYTE, hex.pointers.read_byte, temp_byte
    hex.pointers.xor_byte_to_flip_ptr hex.pointers.read_byte
}
pad DEFAULT_LABEL_PADDINGS
write_temp_byte_to_pointed_byte:
    write_temp_byte_to_pointed_byte
    return_inner


// Required init macros. Space Complexity: 3,142 (according to the standard values).
hex.tables.init_shared
hex.add.init
hex.sub.init




// ---------- Pointer Macros ----------

// Time Complexity: 10@+14  (224 ops, according to the standard valuess)
//   Executes the '>' command:  ptr++
def inc_ptr < inc_ptr {
    call inc_ptr
}
pad DEFAULT_LABEL_PADDINGS
inc_ptr:    // space-complexity is about: 600 (according to the standard values).
    hex.ptr_inc ptr
    return


// Time Complexity: 10@+23  (=233 according to the standard values)
//   Executes the '<' command:  ptr--
def dec_ptr < dec_ptr {
    call dec_ptr
}
pad DEFAULT_LABEL_PADDINGS
dec_ptr:    // space-complexity is about: 600 (according to the standard values).
    hex.ptr_dec ptr
    return




// ---------- Data Macros ----------

// Time Complexity: w(0.75@+ 5) + 26@+1  (~1210 according to the standard values)
//   Executes the '+' command:  (*ptr)++
def inc_data < inc_data {
    call inc_data
}
pad DEFAULT_LABEL_PADDINGS
inc_data:   // space-complexity is about: 131 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.inc HEXES_IN_BYTE, temp_byte
    call_inner write_temp_byte_to_pointed_byte
    return


// Time Complexity: w(0.75@+ 5) + 26@+1  (~1210 according to the standard values)
//   Executes the '-' command:  (*ptr)--
def dec_data < dec_data {
    call dec_data
}
pad DEFAULT_LABEL_PADDINGS
dec_data:   // space-complexity is about: 131 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.dec HEXES_IN_BYTE, temp_byte
    call_inner write_temp_byte_to_pointed_byte
    return




// ---------- IO Macros ----------

//  Time Complexity: w(0.75@+ 5) + 13@+5   (~940 ops, according to the standard values)
//   Executes the '.' command:  print_byte(*ptr)
def output < output {
    call output
}
pad DEFAULT_LABEL_PADDINGS
output:     // space-complexity is about: 63 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.print temp_byte
    return


// Time Complexity: w(0.75@+ 5) + 28@+15  (~1270 according to the standard values)
//   Executes the ',' command:  *ptr = input_byte()
def input < input {
    call input
}
pad DEFAULT_LABEL_PADDINGS
input:      // space-complexity is about: 161 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.input temp_byte
    call_inner write_temp_byte_to_pointed_byte
    return




// ---------- Looping Macros ----------

// Time Complexity: w(0.75@+ 5) + 12@+7  (~920 according to the standard values)
//   Executes the '[' command:  if (*ptr == 0) goto loop-end
def loop_start after_loop_end_label < read_pointed_byte_to_temp_byte, temp_byte {
    call_inner read_pointed_byte_to_temp_byte
    hex.if0 HEXES_IN_BYTE, temp_byte, after_loop_end_label
}
// Time Complexity: w(0.75@+ 5) + 12@+7  (~920 according to the standard values)
//   Executes the ']' command:  if (*ptr != 0) goto loop-start
def loop_end after_loop_start_label < read_pointed_byte_to_temp_byte, temp_byte {
    call_inner read_pointed_byte_to_temp_byte
    hex.if1 HEXES_IN_BYTE, temp_byte, after_loop_start_label
}



// ---------- Pointer Optimization Macros ----------

// Time Complexity: w(0.75@+ 5) + 44@+50  (~1640 according to the standard values)
//   Executes multiple '>','<' commands:  ptr += value  (value must be 0 <= value < 256)
def add_ptr value < repetition_optimization_ptr_offset, add_ptr {
    hex.set \
        PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        repetition_optimization_ptr_offset, \
        (value * dw) >> (BITS_IN_HEX * PTR_OPTIMIZE_OFFSET_HEX_SHIFT)
    call add_ptr
}
pad DEFAULT_LABEL_PADDINGS
add_ptr:    // space-complexity is about: 699
    hex.add_shifted \
        w/BITS_IN_HEX,  PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        ptr,            repetition_optimization_ptr_offset, \
        PTR_OPTIMIZE_OFFSET_HEX_SHIFT
    return


// Time Complexity: w(0.75@+ 5) + 44@+59  (~1650 according to the standard values)
//   Executes multiple '<','>' commands:  ptr -= value  (value must be 0 <= value < 256)
def sub_ptr value < repetition_optimization_ptr_offset, sub_ptr {
    hex.set \
        PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        repetition_optimization_ptr_offset, \
        (value * dw) >> (BITS_IN_HEX * PTR_OPTIMIZE_OFFSET_HEX_SHIFT)
    call sub_ptr
}
pad DEFAULT_LABEL_PADDINGS
sub_ptr:    // space-complexity is about: 711
    hex.sub_shifted \
        w/BITS_IN_HEX,  PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        ptr,            repetition_optimization_ptr_offset, \
        PTR_OPTIMIZE_OFFSET_HEX_SHIFT
    return




// ---------- Data Optimization Macros ----------


// Time Complexity: w(0.75@+ 5) + 34@+33  (~1410 according to the standard values)
//   Executes multiple '+'/'-' commands:  (*ptr) += value  (value is positive, yet can overflow)
def add_data value < repetition_optimization_byte, add_data {
    hex.set HEXES_IN_BYTE, repetition_optimization_byte, value
    call add_data
}
pad DEFAULT_LABEL_PADDINGS
add_data:   // space-complexity is about: 313
    call_inner read_pointed_byte_to_temp_byte
    hex.add HEXES_IN_BYTE, temp_byte, repetition_optimization_byte
    call_inner write_temp_byte_to_pointed_byte
    return


// Time Complexity: w(0.75@+ 5) + 30@+9  (~1300 according to the standard values)
//   Executes "[-]"/"[+]" and then multiple '+'/'-' commands:  (*ptr) = value  (value is positive, yet can overflow)
def set_data value < repetition_optimization_byte, set_data {
    hex.set HEXES_IN_BYTE, repetition_optimization_byte, value
    call set_data
}
pad DEFAULT_LABEL_PADDINGS
set_data:   // space-complexity is about: 173
    call_inner read_pointed_byte_to_temp_byte
    hex.mov HEXES_IN_BYTE, temp_byte, repetition_optimization_byte
    call_inner write_temp_byte_to_pointed_byte
    return




brainfuck_start:

// The next code was optimized by bf2fj:

// * factor an arbitrarily large positive integer
// *
// * Copyright (C) 1999 by Brian Raiter
// * under the GNU General Public License
add_ptr 30
dec_data
// *
// * read in the number
// *
sub_ptr 9
inc_data
loop_start loop_op_132
loop_op_48:
dec_data
loop_start loop_op_61
loop_op_50:
add_ptr 10
loop_end loop_op_50
loop_op_61:
set_data 0
sub_ptr 10
loop_start loop_op_110
loop_op_75:
loop_start loop_op_99
loop_op_76:
dec_data
add_ptr 10
inc_data
sub_ptr 10
loop_end loop_op_76
loop_op_99:
sub_ptr 10
loop_end loop_op_75
loop_op_110:
add_ptr 10
input
add_data 246
loop_end loop_op_48
loop_op_132:
add_ptr 10
loop_start loop_op_192
loop_op_143:
add_data 219
add_ptr 9
dec_data
inc_ptr
loop_end loop_op_143
loop_op_192:
dec_ptr
loop_start loop_op_222
loop_op_194:
inc_data
inc_ptr
loop_start loop_op_209
loop_op_197:
add_ptr 9
inc_data
inc_ptr
loop_end loop_op_197
loop_op_209:
dec_ptr
dec_data
sub_ptr 10
loop_end loop_op_194
loop_op_222:
dec_data
// *
// * display the number and initialize the loop variable to two
// *
loop_start loop_op_337
loop_op_227:
inc_ptr
add_data 48
output
add_data 208
sub_ptr 11
loop_end loop_op_227
loop_op_337:
add_data 58
output
add_data 230
output
set_data 0
add_ptr 12
add_data 2
sub_ptr 4
inc_data
// *
// * the main loop
// *
loop_start loop_op_3795
loop_op_449:
set_data 0
add_ptr 2
// *
// * make copies of the number and the loop variable
// *
loop_start loop_op_514
loop_op_458:
add_ptr 4
set_data 0
inc_ptr
set_data 0
inc_ptr
set_data 0
inc_ptr
set_data 0
inc_ptr
set_data 0
inc_ptr
set_data 0
sub_ptr 7
loop_start loop_op_505
loop_op_493:
dec_data
add_ptr 3
inc_data
inc_ptr
inc_data
sub_ptr 4
loop_end loop_op_493
loop_op_505:
add_ptr 8
loop_end loop_op_458
loop_op_514:
sub_ptr 10
loop_start loop_op_560
loop_op_525:
add_ptr 6
loop_start loop_op_543
loop_op_532:
dec_data
sub_ptr 4
inc_data
add_ptr 4
loop_end loop_op_532
loop_op_543:
sub_ptr 16
loop_end loop_op_525
loop_op_560:
add_ptr 10
loop_start loop_op_597
loop_op_571:
inc_ptr
loop_start loop_op_587
loop_op_573:
dec_data
add_ptr 3
inc_data
add_ptr 2
inc_data
sub_ptr 5
loop_end loop_op_573
loop_op_587:
add_ptr 9
loop_end loop_op_571
loop_op_597:
sub_ptr 10
loop_start loop_op_645
loop_op_608:
add_ptr 6
loop_start loop_op_628
loop_op_615:
dec_data
sub_ptr 5
inc_data
add_ptr 5
loop_end loop_op_615
loop_op_628:
sub_ptr 16
loop_end loop_op_608
loop_op_645:
add_ptr 10
// *
// * divide the number by the loop variable
// *
loop_start loop_op_679
loop_op_659:
add_ptr 3
set_data 0
add_ptr 3
set_data 0
inc_ptr
set_data 0
add_ptr 3
loop_end loop_op_659
loop_op_679:
// initialize
sub_ptr 10
loop_start loop_op_702
loop_op_691:
sub_ptr 10
loop_end loop_op_691
loop_op_702:
add_ptr 9
set_data 0
add_ptr 7
inc_data
sub_ptr 8
set_data 1
loop_start loop_op_1361
loop_op_735:
dec_data
add_ptr 2
// double divisor until above dividend
loop_start loop_op_758
loop_op_740:
add_ptr 6
loop_start loop_op_753
loop_op_747:
dec_data
inc_ptr
add_data 2
dec_ptr
loop_end loop_op_747
loop_op_753:
add_ptr 4
loop_end loop_op_740
loop_op_758:
sub_ptr 10
loop_start loop_op_815
loop_op_769:
add_ptr 8
set_data 0
inc_ptr
set_data 0
sub_ptr 4
loop_start loop_op_799
loop_op_789:
dec_data
add_ptr 3
add_data 2
sub_ptr 3
loop_end loop_op_789
loop_op_799:
sub_ptr 15
loop_end loop_op_769
loop_op_815:
add_ptr 10
loop_start loop_op_930
loop_op_826:
add_ptr 8
loop_start loop_op_927
loop_op_835:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_926
loop_op_840:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_925
loop_op_845:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_924
loop_op_850:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_923
loop_op_855:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_922
loop_op_860:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_921
loop_op_865:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_920
loop_op_870:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_919
loop_op_875:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_918
loop_op_880:
dec_data
inc_ptr
add_data 247
add_ptr 9
inc_data
sub_ptr 10
loop_start loop_op_917
loop_op_912:
dec_data
inc_ptr
inc_data
dec_ptr
loop_end loop_op_912
loop_op_917:
loop_end loop_op_880
loop_op_918:
loop_end loop_op_875
loop_op_919:
loop_end loop_op_870
loop_op_920:
loop_end loop_op_865
loop_op_921:
loop_end loop_op_860
loop_op_922:
loop_end loop_op_855
loop_op_923:
loop_end loop_op_850
loop_op_924:
loop_end loop_op_845
loop_op_925:
loop_end loop_op_840
loop_op_926:
loop_end loop_op_835
loop_op_927:
add_ptr 2
loop_end loop_op_826
loop_op_930:
sub_ptr 10
loop_start loop_op_983
loop_op_941:
add_ptr 9
loop_start loop_op_963
loop_op_951:
dec_data
dec_ptr
inc_data
sub_ptr 3
inc_data
add_ptr 4
loop_end loop_op_951
loop_op_963:
sub_ptr 19
loop_end loop_op_941
loop_op_983:
add_ptr 10
loop_start loop_op_1100
loop_op_994:
add_ptr 7
loop_start loop_op_1096
loop_op_1002:
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_1095
loop_op_1007:
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_1094
loop_op_1012:
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_1093
loop_op_1017:
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_1092
loop_op_1022:
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_1091
loop_op_1027:
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_1090
loop_op_1032:
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_1089
loop_op_1037:
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_1088
loop_op_1042:
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_1087
loop_op_1047:
dec_data
dec_ptr
add_data 247
add_ptr 11
inc_data
sub_ptr 10
loop_start loop_op_1086
loop_op_1081:
dec_data
dec_ptr
inc_data
inc_ptr
loop_end loop_op_1081
loop_op_1086:
loop_end loop_op_1047
loop_op_1087:
loop_end loop_op_1042
loop_op_1088:
loop_end loop_op_1037
loop_op_1089:
loop_end loop_op_1032
loop_op_1090:
loop_end loop_op_1027
loop_op_1091:
loop_end loop_op_1022
loop_op_1092:
loop_end loop_op_1017
loop_op_1093:
loop_end loop_op_1012
loop_op_1094:
loop_end loop_op_1007
loop_op_1095:
loop_end loop_op_1002
loop_op_1096:
add_ptr 3
loop_end loop_op_994
loop_op_1100:
sub_ptr 10
loop_start loop_op_1145
loop_op_1111:
add_ptr 4
loop_start loop_op_1130
loop_op_1116:
dec_data
add_ptr 3
inc_data
add_ptr 2
inc_data
sub_ptr 5
loop_end loop_op_1116
loop_op_1130:
sub_ptr 14
loop_end loop_op_1111
loop_op_1145:
add_ptr 10
loop_start loop_op_1177
loop_op_1156:
add_ptr 7
loop_start loop_op_1173
loop_op_1164:
dec_data
sub_ptr 3
inc_data
add_ptr 3
loop_end loop_op_1164
loop_op_1173:
add_ptr 3
loop_end loop_op_1156
loop_op_1177:
sub_ptr 10
loop_start loop_op_1312
loop_op_1188:
add_ptr 8
loop_start loop_op_1202
loop_op_1197:
dec_data
inc_ptr
dec_data
dec_ptr
loop_end loop_op_1197
loop_op_1202:
inc_ptr
loop_start loop_op_1292
loop_op_1204:
sub_ptr 9
loop_start loop_op_1272
loop_op_1214:
dec_ptr
set_data 0
add_ptr 10
loop_start loop_op_1252
loop_op_1229:
dec_data
sub_ptr 10
inc_data
add_ptr 10
loop_end loop_op_1229
loop_op_1252:
sub_ptr 19
loop_end loop_op_1214
loop_op_1272:
add_ptr 19
loop_end loop_op_1204
loop_op_1292:
sub_ptr 19
loop_end loop_op_1188
loop_op_1312:
add_ptr 9
loop_start loop_op_1359
loop_op_1322:
inc_data
loop_start loop_op_1358
loop_op_1324:
inc_data
loop_start loop_op_1357
loop_op_1326:
inc_data
loop_start loop_op_1356
loop_op_1328:
inc_data
loop_start loop_op_1355
loop_op_1330:
inc_data
loop_start loop_op_1354
loop_op_1332:
inc_data
loop_start loop_op_1353
loop_op_1334:
inc_data
loop_start loop_op_1352
loop_op_1336:
inc_data
loop_start loop_op_1351
loop_op_1338:
inc_data
loop_start loop_op_1350
loop_op_1340:
inc_data
loop_start loop_op_1349
loop_op_1342:
set_data 0
dec_ptr
inc_data
inc_ptr
loop_end loop_op_1342
loop_op_1349:
loop_end loop_op_1340
loop_op_1350:
loop_end loop_op_1338
loop_op_1351:
loop_end loop_op_1336
loop_op_1352:
loop_end loop_op_1334
loop_op_1353:
loop_end loop_op_1332
loop_op_1354:
loop_end loop_op_1330
loop_op_1355:
loop_end loop_op_1328
loop_op_1356:
loop_end loop_op_1326
loop_op_1357:
loop_end loop_op_1324
loop_op_1358:
loop_end loop_op_1322
loop_op_1359:
dec_ptr
loop_end loop_op_735
loop_op_1361:
add_ptr 8
loop_start loop_op_2820
loop_op_1370:
// subtract divisor from dividend
sub_ptr 6
loop_start loop_op_1418
loop_op_1378:
add_ptr 8
set_data 0
inc_ptr
set_data 0
sub_ptr 5
loop_start loop_op_1411
loop_op_1399:
dec_data
add_ptr 3
inc_data
inc_ptr
inc_data
sub_ptr 4
loop_end loop_op_1399
loop_op_1411:
add_ptr 6
loop_end loop_op_1378
loop_op_1418:
sub_ptr 10
loop_start loop_op_1481
loop_op_1429:
add_ptr 8
loop_start loop_op_1449
loop_op_1438:
dec_data
sub_ptr 4
inc_data
add_ptr 4
loop_end loop_op_1438
loop_op_1449:
sub_ptr 3
loop_start loop_op_1465
loop_op_1453:
dec_data
add_ptr 3
inc_data
inc_ptr
inc_data
sub_ptr 4
loop_end loop_op_1453
loop_op_1465:
sub_ptr 15
loop_end loop_op_1429
loop_op_1481:
add_ptr 10
loop_start loop_op_1515
loop_op_1492:
add_ptr 9
loop_start loop_op_1513
loop_op_1502:
dec_data
sub_ptr 4
inc_data
add_ptr 4
loop_end loop_op_1502
loop_op_1513:
inc_ptr
loop_end loop_op_1492
loop_op_1515:
sub_ptr 10
loop_start loop_op_1559
loop_op_1526:
add_ptr 8
loop_start loop_op_1540
loop_op_1535:
dec_data
dec_ptr
dec_data
inc_ptr
loop_end loop_op_1535
loop_op_1540:
sub_ptr 18
loop_end loop_op_1526
loop_op_1559:
add_ptr 10
loop_start loop_op_1680
loop_op_1570:
add_ptr 7
loop_start loop_op_1676
loop_op_1578:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_1675
loop_op_1583:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_1674
loop_op_1588:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_1673
loop_op_1593:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_1672
loop_op_1598:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_1671
loop_op_1603:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_1670
loop_op_1608:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_1669
loop_op_1613:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_1668
loop_op_1618:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_1667
loop_op_1623:
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_1666
loop_op_1628:
add_data 10
loop_start loop_op_1644
loop_op_1639:
inc_data
inc_ptr
dec_data
dec_ptr
loop_end loop_op_1639
loop_op_1644:
add_ptr 10
dec_data
sub_ptr 10
loop_end loop_op_1628
loop_op_1666:
loop_end loop_op_1623
loop_op_1667:
loop_end loop_op_1618
loop_op_1668:
loop_end loop_op_1613
loop_op_1669:
loop_end loop_op_1608
loop_op_1670:
loop_end loop_op_1603
loop_op_1671:
loop_end loop_op_1598
loop_op_1672:
loop_end loop_op_1593
loop_op_1673:
loop_end loop_op_1588
loop_op_1674:
loop_end loop_op_1583
loop_op_1675:
loop_end loop_op_1578
loop_op_1676:
add_ptr 3
loop_end loop_op_1570
loop_op_1680:
add_ptr 7
inc_data
loop_start loop_op_2074
loop_op_1689:
// if difference is nonnegative then
set_data 0
sub_ptr 17
// replace dividend and increment quotient
loop_start loop_op_1762
loop_op_1712:
add_ptr 4
set_data 0
add_ptr 4
loop_start loop_op_1735
loop_op_1724:
dec_data
sub_ptr 4
inc_data
add_ptr 4
loop_end loop_op_1724
loop_op_1735:
sub_ptr 2
loop_start loop_op_1745
loop_op_1738:
dec_data
add_ptr 2
inc_data
sub_ptr 2
loop_end loop_op_1738
loop_op_1745:
sub_ptr 16
loop_end loop_op_1712
loop_op_1762:
add_ptr 10
loop_start loop_op_1795
loop_op_1773:
add_ptr 8
loop_start loop_op_1792
loop_op_1782:
dec_data
inc_ptr
inc_data
sub_ptr 3
inc_data
add_ptr 2
loop_end loop_op_1782
loop_op_1792:
add_ptr 2
loop_end loop_op_1773
loop_op_1795:
sub_ptr 10
loop_start loop_op_1839
loop_op_1806:
add_ptr 3
loop_start loop_op_1825
loop_op_1810:
dec_data
add_ptr 6
inc_data
sub_ptr 6
loop_end loop_op_1810
loop_op_1825:
sub_ptr 13
loop_end loop_op_1806
loop_op_1839:
add_ptr 10
loop_start loop_op_2066
loop_op_1850:
add_ptr 9
loop_start loop_op_2064
loop_op_1860:
dec_data
sub_ptr 6
inc_data
add_ptr 6
loop_start loop_op_2063
loop_op_1875:
dec_data
sub_ptr 6
inc_data
add_ptr 6
loop_start loop_op_2062
loop_op_1890:
dec_data
sub_ptr 6
inc_data
add_ptr 6
loop_start loop_op_2061
loop_op_1905:
dec_data
sub_ptr 6
inc_data
add_ptr 6
loop_start loop_op_2060
loop_op_1920:
dec_data
sub_ptr 6
inc_data
add_ptr 6
loop_start loop_op_2059
loop_op_1935:
dec_data
sub_ptr 6
inc_data
add_ptr 6
loop_start loop_op_2058
loop_op_1950:
dec_data
sub_ptr 6
inc_data
add_ptr 6
loop_start loop_op_2057
loop_op_1965:
dec_data
sub_ptr 6
inc_data
add_ptr 6
loop_start loop_op_2056
loop_op_1980:
dec_data
sub_ptr 6
inc_data
add_ptr 6
loop_start loop_op_2055
loop_op_1995:
dec_data
sub_ptr 6
add_data 247
add_ptr 16
inc_data
sub_ptr 10
loop_start loop_op_2054
loop_op_2039:
dec_data
sub_ptr 6
inc_data
add_ptr 6
loop_end loop_op_2039
loop_op_2054:
loop_end loop_op_1995
loop_op_2055:
loop_end loop_op_1980
loop_op_2056:
loop_end loop_op_1965
loop_op_2057:
loop_end loop_op_1950
loop_op_2058:
loop_end loop_op_1935
loop_op_2059:
loop_end loop_op_1920
loop_op_2060:
loop_end loop_op_1905
loop_op_2061:
loop_end loop_op_1890
loop_op_2062:
loop_end loop_op_1875
loop_op_2063:
loop_end loop_op_1860
loop_op_2064:
inc_ptr
loop_end loop_op_1850
loop_op_2066:
add_ptr 7
loop_end loop_op_1689
loop_op_2074:
// halve divisor and loop until zero
sub_ptr 17
loop_start loop_op_2104
loop_op_2093:
sub_ptr 10
loop_end loop_op_2093
loop_op_2104:
add_ptr 10
loop_start loop_op_2151
loop_op_2115:
add_ptr 8
set_data 0
sub_ptr 2
loop_start loop_op_2134
loop_op_2129:
dec_data
inc_ptr
inc_data
dec_ptr
loop_end loop_op_2129
loop_op_2134:
dec_ptr
loop_start loop_op_2145
loop_op_2136:
dec_data
add_ptr 3
inc_data
sub_ptr 3
loop_end loop_op_2136
loop_op_2145:
add_ptr 5
loop_end loop_op_2115
loop_op_2151:
sub_ptr 10
loop_start loop_op_2373
loop_op_2162:
inc_data
add_ptr 7
loop_start loop_op_2336
loop_op_2171:
dec_data
sub_ptr 7
inc_data
add_ptr 7
loop_start loop_op_2335
loop_op_2188:
dec_data
sub_ptr 7
dec_data
add_ptr 6
inc_data
inc_ptr
loop_start loop_op_2334
loop_op_2206:
dec_data
sub_ptr 7
inc_data
add_ptr 7
loop_start loop_op_2333
loop_op_2223:
dec_data
sub_ptr 7
dec_data
add_ptr 6
inc_data
inc_ptr
loop_start loop_op_2332
loop_op_2241:
dec_data
sub_ptr 7
inc_data
add_ptr 7
loop_start loop_op_2331
loop_op_2258:
dec_data
sub_ptr 7
dec_data
add_ptr 6
inc_data
inc_ptr
loop_start loop_op_2330
loop_op_2276:
dec_data
sub_ptr 7
inc_data
add_ptr 7
loop_start loop_op_2329
loop_op_2293:
dec_data
sub_ptr 7
dec_data
add_ptr 6
inc_data
inc_ptr
loop_start loop_op_2328
loop_op_2311:
dec_data
sub_ptr 7
inc_data
add_ptr 7
loop_end loop_op_2311
loop_op_2328:
loop_end loop_op_2293
loop_op_2329:
loop_end loop_op_2276
loop_op_2330:
loop_end loop_op_2258
loop_op_2331:
loop_end loop_op_2241
loop_op_2332:
loop_end loop_op_2223
loop_op_2333:
loop_end loop_op_2206
loop_op_2334:
loop_end loop_op_2188
loop_op_2335:
loop_end loop_op_2171
loop_op_2336:
sub_ptr 7
loop_start loop_op_2361
loop_op_2344:
dec_data
add_ptr 7
inc_data
sub_ptr 7
loop_end loop_op_2344
loop_op_2361:
dec_data
sub_ptr 10
loop_end loop_op_2162
loop_op_2373:
add_ptr 7
loop_start loop_op_2406
loop_op_2381:
dec_data
sub_ptr 11
inc_data
add_ptr 11
loop_end loop_op_2381
loop_op_2406:
add_ptr 3
loop_start loop_op_2451
loop_op_2410:
add_ptr 7
loop_start loop_op_2447
loop_op_2418:
dec_data
sub_ptr 11
add_data 5
add_ptr 11
loop_end loop_op_2418
loop_op_2447:
add_ptr 3
loop_end loop_op_2410
loop_op_2451:
sub_ptr 10
loop_start loop_op_2695
loop_op_2462:
inc_data
add_ptr 8
loop_start loop_op_2655
loop_op_2472:
dec_data
sub_ptr 8
inc_data
add_ptr 8
loop_start loop_op_2654
loop_op_2491:
dec_data
sub_ptr 8
dec_data
add_ptr 5
inc_data
add_ptr 3
loop_start loop_op_2653
loop_op_2511:
dec_data
sub_ptr 8
inc_data
add_ptr 8
loop_start loop_op_2652
loop_op_2530:
dec_data
sub_ptr 8
dec_data
add_ptr 5
inc_data
add_ptr 3
loop_start loop_op_2651
loop_op_2550:
dec_data
sub_ptr 8
inc_data
add_ptr 8
loop_start loop_op_2650
loop_op_2569:
dec_data
sub_ptr 8
dec_data
add_ptr 5
inc_data
add_ptr 3
loop_start loop_op_2649
loop_op_2589:
dec_data
sub_ptr 8
inc_data
add_ptr 8
loop_start loop_op_2648
loop_op_2608:
dec_data
sub_ptr 8
dec_data
add_ptr 5
inc_data
add_ptr 3
loop_start loop_op_2647
loop_op_2628:
dec_data
sub_ptr 8
inc_data
add_ptr 8
loop_end loop_op_2628
loop_op_2647:
loop_end loop_op_2608
loop_op_2648:
loop_end loop_op_2589
loop_op_2649:
loop_end loop_op_2569
loop_op_2650:
loop_end loop_op_2550
loop_op_2651:
loop_end loop_op_2530
loop_op_2652:
loop_end loop_op_2511
loop_op_2653:
loop_end loop_op_2491
loop_op_2654:
loop_end loop_op_2472
loop_op_2655:
sub_ptr 8
loop_start loop_op_2683
loop_op_2664:
dec_data
add_ptr 8
inc_data
sub_ptr 8
loop_end loop_op_2664
loop_op_2683:
dec_data
sub_ptr 10
loop_end loop_op_2462
loop_op_2695:
add_ptr 8
loop_start loop_op_2733
loop_op_2704:
dec_data
sub_ptr 13
inc_data
add_ptr 13
loop_end loop_op_2704
loop_op_2733:
add_ptr 2
loop_start loop_op_2781
loop_op_2736:
add_ptr 8
loop_start loop_op_2778
loop_op_2745:
dec_data
sub_ptr 13
add_data 5
add_ptr 13
loop_end loop_op_2745
loop_op_2778:
add_ptr 2
loop_end loop_op_2736
loop_op_2781:
sub_ptr 10
loop_start loop_op_2803
loop_op_2792:
sub_ptr 10
loop_end loop_op_2792
loop_op_2803:
add_ptr 16
loop_end loop_op_1370
loop_op_2820:
sub_ptr 6
// *
// * make copies of the loop variable and the quotient
// *
loop_start loop_op_2856
loop_op_2830:
add_ptr 3
loop_start loop_op_2848
loop_op_2834:
dec_data
add_ptr 4
inc_data
inc_ptr
inc_data
sub_ptr 5
loop_end loop_op_2834
loop_op_2848:
add_ptr 7
loop_end loop_op_2830
loop_op_2856:
sub_ptr 10
loop_start loop_op_2923
loop_op_2867:
add_ptr 7
loop_start loop_op_2886
loop_op_2875:
dec_data
sub_ptr 4
inc_data
add_ptr 4
loop_end loop_op_2875
loop_op_2886:
sub_ptr 5
loop_start loop_op_2910
loop_op_2892:
dec_data
add_ptr 5
inc_data
add_ptr 2
inc_data
sub_ptr 7
loop_end loop_op_2892
loop_op_2910:
sub_ptr 12
loop_end loop_op_2867
loop_op_2923:
add_ptr 10
loop_start loop_op_2959
loop_op_2934:
add_ptr 7
loop_start loop_op_2955
loop_op_2942:
dec_data
sub_ptr 5
inc_data
add_ptr 5
loop_end loop_op_2942
loop_op_2955:
add_ptr 3
loop_end loop_op_2934
loop_op_2959:
sub_ptr 10
// *
// * break out of the loop if the quotient is larger than the loop variable
// *
loop_start loop_op_3095
loop_op_2973:
add_ptr 9
loop_start loop_op_2988
loop_op_2983:
dec_data
dec_ptr
dec_data
inc_ptr
loop_end loop_op_2983
loop_op_2988:
dec_ptr
loop_start loop_op_3076
loop_op_2990:
sub_ptr 8
loop_start loop_op_3057
loop_op_2999:
sub_ptr 2
set_data 0
add_ptr 10
loop_start loop_op_3038
loop_op_3015:
dec_data
sub_ptr 10
inc_data
add_ptr 10
loop_end loop_op_3015
loop_op_3038:
sub_ptr 18
loop_end loop_op_2999
loop_op_3057:
add_ptr 18
loop_end loop_op_2990
loop_op_3076:
sub_ptr 18
loop_end loop_op_2973
loop_op_3095:
add_ptr 8
loop_start loop_op_3143
loop_op_3104:
inc_ptr
dec_data
dec_ptr
loop_start loop_op_3142
loop_op_3108:
inc_data
loop_start loop_op_3141
loop_op_3110:
inc_data
loop_start loop_op_3140
loop_op_3112:
inc_data
loop_start loop_op_3139
loop_op_3114:
inc_data
loop_start loop_op_3138
loop_op_3116:
inc_data
loop_start loop_op_3137
loop_op_3118:
inc_data
loop_start loop_op_3136
loop_op_3120:
inc_data
loop_start loop_op_3135
loop_op_3122:
inc_data
loop_start loop_op_3134
loop_op_3124:
inc_data
loop_start loop_op_3133
loop_op_3126:
set_data 0
inc_ptr
inc_data
dec_ptr
loop_end loop_op_3126
loop_op_3133:
loop_end loop_op_3124
loop_op_3134:
loop_end loop_op_3122
loop_op_3135:
loop_end loop_op_3120
loop_op_3136:
loop_end loop_op_3118
loop_op_3137:
loop_end loop_op_3116
loop_op_3138:
loop_end loop_op_3114
loop_op_3139:
loop_end loop_op_3112
loop_op_3140:
loop_end loop_op_3110
loop_op_3141:
loop_end loop_op_3108
loop_op_3142:
loop_end loop_op_3104
loop_op_3143:
inc_ptr
inc_data
loop_start loop_op_3793
loop_op_3146:
set_data 0
// *
// * partially increment the loop variable
// *
dec_ptr
set_data 1
add_ptr 4
inc_data
add_ptr 8
loop_start loop_op_3182
loop_op_3171:
add_ptr 10
loop_end loop_op_3171
loop_op_3182:
sub_ptr 10
// *
// * examine the remainder for nonzero digits
// *
loop_start loop_op_3240
loop_op_3196:
sub_ptr 6
loop_start loop_op_3235
loop_op_3203:
sub_ptr 4
loop_start loop_op_3219
loop_op_3208:
sub_ptr 10
loop_end loop_op_3208
loop_op_3219:
add_ptr 4
inc_data
sub_ptr 10
loop_end loop_op_3203
loop_op_3235:
sub_ptr 4
loop_end loop_op_3196
loop_op_3240:
add_ptr 20
loop_start loop_op_3272
loop_op_3261:
add_ptr 10
loop_end loop_op_3261
loop_op_3272:
sub_ptr 10
loop_start loop_op_3294
loop_op_3283:
sub_ptr 10
loop_end loop_op_3283
loop_op_3294:
add_ptr 4
dec_data
loop_start loop_op_3539
loop_op_3300:
set_data 0
// *
// * decrement the loop variable and replace the number with the quotient
// *
add_ptr 8
dec_data
sub_ptr 2
loop_start loop_op_3340
loop_op_3318:
inc_ptr
set_data 0
add_ptr 2
loop_start loop_op_3332
loop_op_3325:
dec_data
sub_ptr 2
inc_data
add_ptr 2
loop_end loop_op_3325
loop_op_3332:
add_ptr 7
loop_end loop_op_3318
loop_op_3340:
sub_ptr 10
// *
// * display the loop variable
// *
loop_start loop_op_3384
loop_op_3354:
inc_data
add_ptr 2
loop_start loop_op_3370
loop_op_3358:
add_ptr 8
inc_data
add_ptr 2
loop_end loop_op_3358
loop_op_3370:
sub_ptr 2
dec_data
sub_ptr 10
loop_end loop_op_3354
loop_op_3384:
dec_data
loop_start loop_op_3498
loop_op_3386:
add_ptr 2
add_data 48
output
add_data 208
sub_ptr 12
loop_end loop_op_3386
loop_op_3498:
add_data 32
output
set_data 0
add_ptr 4
loop_end loop_op_3300
loop_op_3539:
// *
// * normalize the loop variable
// *
add_ptr 6
loop_start loop_op_3733
loop_op_3549:
add_ptr 2
loop_start loop_op_3724
loop_op_3552:
dec_data
add_ptr 5
inc_data
sub_ptr 5
loop_start loop_op_3723
loop_op_3565:
dec_data
add_ptr 5
inc_data
sub_ptr 5
loop_start loop_op_3722
loop_op_3578:
dec_data
add_ptr 5
inc_data
sub_ptr 5
loop_start loop_op_3721
loop_op_3591:
dec_data
add_ptr 5
inc_data
sub_ptr 5
loop_start loop_op_3720
loop_op_3604:
dec_data
add_ptr 5
inc_data
sub_ptr 5
loop_start loop_op_3719
loop_op_3617:
dec_data
add_ptr 5
inc_data
sub_ptr 5
loop_start loop_op_3718
loop_op_3630:
dec_data
add_ptr 5
inc_data
sub_ptr 5
loop_start loop_op_3717
loop_op_3643:
dec_data
add_ptr 5
inc_data
sub_ptr 5
loop_start loop_op_3716
loop_op_3656:
dec_data
add_ptr 5
inc_data
sub_ptr 5
loop_start loop_op_3715
loop_op_3669:
dec_data
add_ptr 5
add_data 247
add_ptr 5
inc_data
sub_ptr 10
loop_start loop_op_3714
loop_op_3701:
dec_data
add_ptr 5
inc_data
sub_ptr 5
loop_end loop_op_3701
loop_op_3714:
loop_end loop_op_3669
loop_op_3715:
loop_end loop_op_3656
loop_op_3716:
loop_end loop_op_3643
loop_op_3717:
loop_end loop_op_3630
loop_op_3718:
loop_end loop_op_3617
loop_op_3719:
loop_end loop_op_3604
loop_op_3720:
loop_end loop_op_3591
loop_op_3721:
loop_end loop_op_3578
loop_op_3722:
loop_end loop_op_3565
loop_op_3723:
loop_end loop_op_3552
loop_op_3724:
add_ptr 8
loop_end loop_op_3549
loop_op_3733:
sub_ptr 10
loop_start loop_op_3783
loop_op_3744:
add_ptr 7
loop_start loop_op_3765
loop_op_3752:
dec_data
sub_ptr 5
inc_data
add_ptr 5
loop_end loop_op_3752
loop_op_3765:
sub_ptr 17
loop_end loop_op_3744
loop_op_3783:
add_ptr 9
loop_end loop_op_3146
loop_op_3793:
dec_ptr
loop_end loop_op_449
loop_op_3795:
add_ptr 2
// *
// * display the number and end
// *
loop_start loop_op_3812
loop_op_3801:
add_ptr 10
loop_end loop_op_3801
loop_op_3812:
sub_ptr 10
loop_start loop_op_3851
loop_op_3823:
inc_data
inc_ptr
loop_start loop_op_3838
loop_op_3826:
add_ptr 9
inc_data
inc_ptr
loop_end loop_op_3826
loop_op_3838:
dec_ptr
dec_data
sub_ptr 10
loop_end loop_op_3823
loop_op_3851:
dec_data
loop_start loop_op_3915
loop_op_3853:
inc_ptr
add_data 48
output
sub_ptr 11
loop_end loop_op_3853
loop_op_3915:
add_data 10
output

stl.loop


brainfuck_memory:
reserve dw * 30000
