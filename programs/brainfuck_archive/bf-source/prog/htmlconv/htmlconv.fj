// The next code was created as part of the bf2fj (Brainfuck to Flipjump) project: https://github.com/tomhea/bf2fj


HEXES_IN_BYTE = 2
BITS_IN_HEX = 4
DEFAULT_LABEL_PADDINGS = 16
// NOTE: standard values, for a program of size 10,000 random bf-ops: w=32, @=21.

stl.startup_and_init_pointers brainfuck_start


ptr: hex.vec w/BITS_IN_HEX, brainfuck_memory  // this is the main data-pointer that brainfuck operates on.

ret_register: bit.bit           // used for the brainfuck ops fast-calls.
inner_ret_register: bit.bit     // used for the read/write *ptr fast-calls.
// Complexity: @-1
def call label < ret_register {
    stl.fcall label, ret_register
}
// Complexity: 1
def return < ret_register {
    stl.fret ret_register
}

def call_inner label < inner_ret_register {
    stl.fcall label, inner_ret_register
}
// Complexity: 1
def return_inner < inner_ret_register {
    stl.fret inner_ret_register
}

temp_byte: hex.vec HEXES_IN_BYTE        // can be changed between read_pointed_byte..() to write_temp_byte(..) calls.

repetition_optimization_byte: hex.vec HEXES_IN_BYTE     // can be changed, as it's an input to data-optimization macros.

PTR_OPTIMIZE_OFFSET_HEX_LENGTH = 3
PTR_OPTIMIZE_OFFSET_HEX_SHIFT = 1
// can be changed, as it's an input to ptr-optimization macros.
repetition_optimization_ptr_offset: hex.vec PTR_OPTIMIZE_OFFSET_HEX_LENGTH

//  Time Complexity: w(0.75@+ 5) + 9@+13   ( ~870 ops, according to the standard values)
// Space Complexity: w(0.75@+29) + 9@+72   (~1700 ops, according to the standard values)
//    temp_byte = stl.pointers.read_byte = *ptr[:2]
def read_pointed_byte_to_temp_byte < ptr, temp_byte {
    hex.read_byte temp_byte, ptr
}
pad DEFAULT_LABEL_PADDINGS
read_pointed_byte_to_temp_byte:
    read_pointed_byte_to_temp_byte
    return_inner

//  Time Complexity: 12@      (~250 ops, according to the standard values)
// Space Complexity: 12@+176  (~430 ops, according to the standard values)
//    *ptr[:2] ^= (temp_byte ^ _original_byte)
def write_temp_byte_to_pointed_byte < hex.pointers.read_byte, temp_byte {
    hex.xor HEXES_IN_BYTE, hex.pointers.read_byte, temp_byte
    hex.pointers.xor_byte_to_flip_ptr hex.pointers.read_byte
}
pad DEFAULT_LABEL_PADDINGS
write_temp_byte_to_pointed_byte:
    write_temp_byte_to_pointed_byte
    return_inner


// Required init macros. Space Complexity: 3,142 (according to the standard values).
hex.tables.init_shared
hex.add.init
hex.sub.init




// ---------- Pointer Macros ----------

// Time Complexity: 10@+14  (224 ops, according to the standard valuess)
//   Executes the '>' command:  ptr++
def inc_ptr < inc_ptr {
    call inc_ptr
}
pad DEFAULT_LABEL_PADDINGS
inc_ptr:    // space-complexity is about: 600 (according to the standard values).
    hex.ptr_inc ptr
    return


// Time Complexity: 10@+23  (=233 according to the standard values)
//   Executes the '<' command:  ptr--
def dec_ptr < dec_ptr {
    call dec_ptr
}
pad DEFAULT_LABEL_PADDINGS
dec_ptr:    // space-complexity is about: 600 (according to the standard values).
    hex.ptr_dec ptr
    return




// ---------- Data Macros ----------

// Time Complexity: w(0.75@+ 5) + 26@+1  (~1210 according to the standard values)
//   Executes the '+' command:  (*ptr)++
def inc_data < inc_data {
    call inc_data
}
pad DEFAULT_LABEL_PADDINGS
inc_data:   // space-complexity is about: 131 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.inc HEXES_IN_BYTE, temp_byte
    call_inner write_temp_byte_to_pointed_byte
    return


// Time Complexity: w(0.75@+ 5) + 26@+1  (~1210 according to the standard values)
//   Executes the '-' command:  (*ptr)--
def dec_data < dec_data {
    call dec_data
}
pad DEFAULT_LABEL_PADDINGS
dec_data:   // space-complexity is about: 131 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.dec HEXES_IN_BYTE, temp_byte
    call_inner write_temp_byte_to_pointed_byte
    return




// ---------- IO Macros ----------

//  Time Complexity: w(0.75@+ 5) + 13@+5   (~940 ops, according to the standard values)
//   Executes the '.' command:  print_byte(*ptr)
def output < output {
    call output
}
pad DEFAULT_LABEL_PADDINGS
output:     // space-complexity is about: 63 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.print temp_byte
    return


// Time Complexity: w(0.75@+ 5) + 28@+15  (~1270 according to the standard values)
//   Executes the ',' command:  *ptr = input_byte()
def input < input {
    call input
}
pad DEFAULT_LABEL_PADDINGS
input:      // space-complexity is about: 161 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.input temp_byte
    call_inner write_temp_byte_to_pointed_byte
    return




// ---------- Looping Macros ----------

// Time Complexity: w(0.75@+ 5) + 12@+7  (~920 according to the standard values)
//   Executes the '[' command:  if (*ptr == 0) goto loop-end
def loop_start after_loop_end_label < read_pointed_byte_to_temp_byte, temp_byte {
    call_inner read_pointed_byte_to_temp_byte
    hex.if0 HEXES_IN_BYTE, temp_byte, after_loop_end_label
}
// Time Complexity: w(0.75@+ 5) + 12@+7  (~920 according to the standard values)
//   Executes the ']' command:  if (*ptr != 0) goto loop-start
def loop_end after_loop_start_label < read_pointed_byte_to_temp_byte, temp_byte {
    call_inner read_pointed_byte_to_temp_byte
    hex.if1 HEXES_IN_BYTE, temp_byte, after_loop_start_label
}



// ---------- Pointer Optimization Macros ----------

// Time Complexity: w(0.75@+ 5) + 44@+50  (~1640 according to the standard values)
//   Executes multiple '>','<' commands:  ptr += value  (value must be 0 <= value < 256)
def add_ptr value < repetition_optimization_ptr_offset, add_ptr {
    hex.set \
        PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        repetition_optimization_ptr_offset, \
        (value * dw) >> (BITS_IN_HEX * PTR_OPTIMIZE_OFFSET_HEX_SHIFT)
    call add_ptr
}
pad DEFAULT_LABEL_PADDINGS
add_ptr:    // space-complexity is about: 699
    hex.add_shifted \
        w/BITS_IN_HEX,  PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        ptr,            repetition_optimization_ptr_offset, \
        PTR_OPTIMIZE_OFFSET_HEX_SHIFT
    return


// Time Complexity: w(0.75@+ 5) + 44@+59  (~1650 according to the standard values)
//   Executes multiple '<','>' commands:  ptr -= value  (value must be 0 <= value < 256)
def sub_ptr value < repetition_optimization_ptr_offset, sub_ptr {
    hex.set \
        PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        repetition_optimization_ptr_offset, \
        (value * dw) >> (BITS_IN_HEX * PTR_OPTIMIZE_OFFSET_HEX_SHIFT)
    call sub_ptr
}
pad DEFAULT_LABEL_PADDINGS
sub_ptr:    // space-complexity is about: 711
    hex.sub_shifted \
        w/BITS_IN_HEX,  PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        ptr,            repetition_optimization_ptr_offset, \
        PTR_OPTIMIZE_OFFSET_HEX_SHIFT
    return




// ---------- Data Optimization Macros ----------


// Time Complexity: w(0.75@+ 5) + 34@+33  (~1410 according to the standard values)
//   Executes multiple '+'/'-' commands:  (*ptr) += value  (value is positive, yet can overflow)
def add_data value < repetition_optimization_byte, add_data {
    hex.set HEXES_IN_BYTE, repetition_optimization_byte, value
    call add_data
}
pad DEFAULT_LABEL_PADDINGS
add_data:   // space-complexity is about: 313
    call_inner read_pointed_byte_to_temp_byte
    hex.add HEXES_IN_BYTE, temp_byte, repetition_optimization_byte
    call_inner write_temp_byte_to_pointed_byte
    return


// Time Complexity: w(0.75@+ 5) + 30@+9  (~1300 according to the standard values)
//   Executes "[-]"/"[+]" and then multiple '+'/'-' commands:  (*ptr) = value  (value is positive, yet can overflow)
def set_data value < repetition_optimization_byte, set_data {
    hex.set HEXES_IN_BYTE, repetition_optimization_byte, value
    call set_data
}
pad DEFAULT_LABEL_PADDINGS
set_data:   // space-complexity is about: 173
    call_inner read_pointed_byte_to_temp_byte
    hex.mov HEXES_IN_BYTE, temp_byte, repetition_optimization_byte
    call_inner write_temp_byte_to_pointed_byte
    return




brainfuck_start:

// The next code was optimized by bf2fj:

// ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// ;this program converts ASCII_characters ae oe ue Ae Oe Ue (german 'umlauts')
// ;gt lt ss to valid html_code (it's been already tested with bfi)
// ;(erdalkaraca@t_online_de)
inc_ptr
add_data 10
loop_start loop_op_32
loop_op_15:
inc_ptr
add_data 13
dec_ptr
dec_data
loop_end loop_op_15
loop_op_32:
inc_ptr
add_data 2
// ae :var02
add_ptr 2
add_data 12
loop_start loop_op_67
loop_op_51:
dec_ptr
add_data 12
inc_ptr
dec_data
loop_end loop_op_51
loop_op_67:
dec_ptr
add_data 4
// oe :var03
add_ptr 2
add_data 11
loop_start loop_op_102
loop_op_87:
dec_ptr
add_data 11
inc_ptr
dec_data
loop_end loop_op_87
loop_op_102:
dec_ptr
add_data 8
// ue :var04
add_ptr 2
add_data 12
loop_start loop_op_143
loop_op_127:
dec_ptr
add_data 12
inc_ptr
dec_data
loop_end loop_op_127
loop_op_143:
dec_ptr
add_data 254
// Ae :var05
add_ptr 2
add_data 12
loop_start loop_op_179
loop_op_162:
dec_ptr
add_data 13
inc_ptr
dec_data
loop_end loop_op_162
loop_op_179:
dec_ptr
add_data 253
// Oe :var06
add_ptr 2
add_data 12
loop_start loop_op_216
loop_op_199:
dec_ptr
add_data 13
inc_ptr
dec_data
loop_end loop_op_199
loop_op_216:
dec_ptr
add_data 254
// Ue :var07
add_ptr 2
add_data 8
loop_start loop_op_243
loop_op_231:
dec_ptr
add_data 8
inc_ptr
dec_data
loop_end loop_op_231
loop_op_243:
dec_ptr
add_data 254
// gt :var08
add_ptr 2
add_data 8
loop_start loop_op_269
loop_op_258:
dec_ptr
add_data 7
inc_ptr
dec_data
loop_end loop_op_258
loop_op_269:
dec_ptr
add_data 4
// lt :var09
// ;to add more variables_ use elements above 17
add_ptr 10
add_data 15
loop_start loop_op_321
loop_op_302:
dec_ptr
add_data 15
inc_ptr
dec_data
loop_end loop_op_302
loop_op_321:
dec_ptr
// ss :var10
// 18
sub_ptr 8
inc_data
// 10
loop_start loop_op_3426
loop_op_337:
inc_ptr
input
// 11
loop_start loop_op_3365
loop_op_341:
// ;IF x == var02 THEN PRINT "&auml;"
sub_ptr 9
// 2
loop_start loop_op_363
loop_op_353:
dec_ptr
// 1
inc_data
dec_ptr
// 0
inc_data
add_ptr 2
dec_data
loop_end loop_op_353
loop_op_363:
dec_ptr
loop_start loop_op_370
loop_op_365:
inc_ptr
inc_data
dec_ptr
dec_data
loop_end loop_op_365
loop_op_370:
add_ptr 10
loop_start loop_op_410
loop_op_381:
sub_ptr 10
// 1
inc_data
dec_ptr
// 0
dec_data
add_ptr 11
// 11
dec_data
loop_end loop_op_381
loop_op_410:
sub_ptr 10
// 1
loop_start loop_op_447
loop_op_422:
add_ptr 10
// 11
inc_data
sub_ptr 10
// 1
dec_data
loop_end loop_op_422
loop_op_447:
add_ptr 11
// 12
inc_data
inc_ptr
// 13
inc_data
sub_ptr 13
// 0
loop_start loop_op_508
loop_op_478:
add_ptr 12
dec_data
sub_ptr 12
// 0
set_data 0
loop_end loop_op_478
loop_op_508:
add_ptr 11
// 11
inc_ptr
// 12
loop_start loop_op_654
loop_op_523:
add_ptr 2
add_data 6
loop_start loop_op_542
loop_op_532:
inc_ptr
add_data 6
dec_ptr
dec_data
loop_end loop_op_532
loop_op_542:
inc_ptr
add_data 2
output
dec_ptr
add_data 7
loop_start loop_op_567
loop_op_555:
inc_ptr
add_data 8
dec_ptr
dec_data
loop_end loop_op_555
loop_op_567:
inc_ptr
add_data 3
output
dec_ptr
add_data 4
loop_start loop_op_587
loop_op_578:
inc_ptr
add_data 5
dec_ptr
dec_data
loop_end loop_op_578
loop_op_587:
inc_ptr
output
dec_ptr
add_data 2
loop_start loop_op_601
loop_op_593:
inc_ptr
add_data 252
dec_ptr
dec_data
loop_end loop_op_593
loop_op_601:
inc_ptr
output
dec_ptr
inc_data
loop_start loop_op_611
loop_op_606:
inc_ptr
dec_data
dec_ptr
dec_data
loop_end loop_op_606
loop_op_611:
inc_ptr
output
dec_ptr
add_data 7
loop_start loop_op_633
loop_op_622:
inc_ptr
add_data 249
dec_ptr
dec_data
loop_end loop_op_622
loop_op_633:
inc_ptr
// 15
output
set_data 1
sub_ptr 2
// 13!
dec_data
sub_ptr 2
// 11
set_data 0
inc_ptr
// 12
dec_data
loop_end loop_op_523
loop_op_654:
inc_ptr
// 13
loop_start loop_op_981
loop_op_657:
// ;ELSE IF x == var03 THEN PRINT "&ouml;"
sub_ptr 10
// 3
loop_start loop_op_680
loop_op_670:
sub_ptr 2
inc_data
dec_ptr
inc_data
add_ptr 3
dec_data
loop_end loop_op_670
loop_op_680:
sub_ptr 2
// 1
loop_start loop_op_692
loop_op_684:
add_ptr 2
// 3
inc_data
sub_ptr 2
dec_data
loop_end loop_op_684
loop_op_692:
add_ptr 10
loop_start loop_op_731
loop_op_703:
sub_ptr 10
inc_data
dec_ptr
// 0
dec_data
add_ptr 11
// 11
dec_data
loop_end loop_op_703
loop_op_731:
sub_ptr 10
// 1
loop_start loop_op_768
loop_op_743:
add_ptr 10
// 11
inc_data
sub_ptr 10
// 1
dec_data
loop_end loop_op_743
loop_op_768:
add_ptr 11
// 12
inc_data
add_ptr 2
// 14
inc_data
sub_ptr 14
// 0
loop_start loop_op_832
loop_op_801:
add_ptr 12
// 12
dec_data
sub_ptr 12
// 0
set_data 0
loop_end loop_op_801
loop_op_832:
add_ptr 11
// 11
inc_ptr
// 12
loop_start loop_op_977
loop_op_847:
add_ptr 4
// 16
add_data 6
loop_start loop_op_869
loop_op_859:
dec_ptr
add_data 6
inc_ptr
dec_data
loop_end loop_op_859
loop_op_869:
dec_ptr
add_data 2
output
inc_ptr
add_data 8
loop_start loop_op_896
loop_op_883:
dec_ptr
add_data 9
inc_ptr
dec_data
loop_end loop_op_883
loop_op_896:
dec_ptr
inc_data
output
inc_ptr
add_data 2
loop_start loop_op_910
loop_op_903:
dec_ptr
add_data 3
inc_ptr
dec_data
loop_end loop_op_903
loop_op_910:
dec_ptr
output
inc_ptr
add_data 2
loop_start loop_op_924
loop_op_916:
dec_ptr
add_data 252
inc_ptr
dec_data
loop_end loop_op_916
loop_op_924:
dec_ptr
output
inc_ptr
inc_data
loop_start loop_op_934
loop_op_929:
dec_ptr
dec_data
inc_ptr
dec_data
loop_end loop_op_929
loop_op_934:
dec_ptr
output
inc_ptr
add_data 7
loop_start loop_op_956
loop_op_945:
dec_ptr
add_data 249
inc_ptr
dec_data
loop_end loop_op_945
loop_op_956:
dec_ptr
// 15
output
set_data 1
dec_ptr
// 14!
dec_data
sub_ptr 3
// 11
set_data 0
inc_ptr
// 12
dec_data
loop_end loop_op_847
loop_op_977:
inc_ptr
// 13
dec_data
loop_end loop_op_657
loop_op_981:
inc_ptr
// 14
loop_start loop_op_1302
loop_op_984:
// ;ELSE IF x == var04 THEN PRINT "&uuml;"
sub_ptr 10
// 4
loop_start loop_op_1012
loop_op_997:
sub_ptr 3
// 1
inc_data
dec_ptr
// 0
inc_data
add_ptr 4
// 4
dec_data
loop_end loop_op_997
loop_op_1012:
sub_ptr 3
// 1
loop_start loop_op_1026
loop_op_1017:
add_ptr 3
inc_data
sub_ptr 3
dec_data
loop_end loop_op_1017
loop_op_1026:
add_ptr 10
loop_start loop_op_1065
loop_op_1037:
sub_ptr 10
inc_data
dec_ptr
// 0
dec_data
add_ptr 11
// 11
dec_data
loop_end loop_op_1037
loop_op_1065:
sub_ptr 10
loop_start loop_op_1099
loop_op_1076:
add_ptr 10
inc_data
sub_ptr 10
dec_data
loop_end loop_op_1076
loop_op_1099:
add_ptr 11
// 12
inc_data
inc_ptr
// 13
inc_data
sub_ptr 13
// 0
loop_start loop_op_1159
loop_op_1130:
add_ptr 12
dec_data
sub_ptr 12
set_data 0
loop_end loop_op_1130
loop_op_1159:
add_ptr 12
// 12
loop_start loop_op_1297
loop_op_1173:
add_ptr 4
// 16
add_data 6
loop_start loop_op_1195
loop_op_1185:
dec_ptr
add_data 6
inc_ptr
dec_data
loop_end loop_op_1185
loop_op_1195:
dec_ptr
add_data 2
output
inc_ptr
add_data 8
loop_start loop_op_1222
loop_op_1209:
dec_ptr
add_data 9
inc_ptr
dec_data
loop_end loop_op_1209
loop_op_1222:
dec_ptr
add_data 7
output
output
inc_ptr
add_data 2
loop_start loop_op_1244
loop_op_1236:
dec_ptr
add_data 252
inc_ptr
dec_data
loop_end loop_op_1236
loop_op_1244:
dec_ptr
output
inc_ptr
inc_data
loop_start loop_op_1254
loop_op_1249:
dec_ptr
dec_data
inc_ptr
dec_data
loop_end loop_op_1249
loop_op_1254:
dec_ptr
output
inc_ptr
add_data 7
loop_start loop_op_1276
loop_op_1265:
dec_ptr
add_data 249
inc_ptr
dec_data
loop_end loop_op_1265
loop_op_1276:
dec_ptr
// 15
output
set_data 1
sub_ptr 2
// 13!
dec_data
sub_ptr 2
// 11
set_data 0
inc_ptr
// 12
dec_data
loop_end loop_op_1173
loop_op_1297:
add_ptr 2
// 14
dec_data
loop_end loop_op_984
loop_op_1302:
dec_ptr
// 13
loop_start loop_op_1635
loop_op_1305:
// ;ELSE IF x == var05 THEN PRINT "&Auml;"
sub_ptr 8
loop_start loop_op_1329
loop_op_1315:
sub_ptr 4
inc_data
dec_ptr
inc_data
add_ptr 5
dec_data
loop_end loop_op_1315
loop_op_1329:
sub_ptr 4
loop_start loop_op_1345
loop_op_1334:
add_ptr 4
inc_data
sub_ptr 4
dec_data
loop_end loop_op_1334
loop_op_1345:
add_ptr 10
// 11
loop_start loop_op_1385
loop_op_1357:
sub_ptr 10
inc_data
dec_ptr
// 0
dec_data
add_ptr 11
// 11
dec_data
loop_end loop_op_1357
loop_op_1385:
sub_ptr 10
// 1
loop_start loop_op_1420
loop_op_1397:
add_ptr 10
inc_data
sub_ptr 10
dec_data
loop_end loop_op_1397
loop_op_1420:
add_ptr 11
// 12
inc_data
add_ptr 2
// 14
inc_data
sub_ptr 14
loop_start loop_op_1481
loop_op_1452:
add_ptr 12
dec_data
sub_ptr 12
set_data 0
loop_end loop_op_1452
loop_op_1481:
add_ptr 11
// 11
inc_ptr
// 12
loop_start loop_op_1631
loop_op_1496:
add_ptr 4
add_data 6
loop_start loop_op_1517
loop_op_1507:
dec_ptr
add_data 6
inc_ptr
dec_data
loop_end loop_op_1507
loop_op_1517:
dec_ptr
add_data 2
output
inc_ptr
add_data 5
loop_start loop_op_1537
loop_op_1528:
dec_ptr
add_data 5
inc_ptr
dec_data
loop_end loop_op_1528
loop_op_1537:
dec_ptr
add_data 2
output
inc_ptr
add_data 7
loop_start loop_op_1561
loop_op_1550:
dec_ptr
add_data 7
inc_ptr
dec_data
loop_end loop_op_1550
loop_op_1561:
dec_ptr
add_data 3
output
inc_ptr
add_data 2
loop_start loop_op_1578
loop_op_1570:
dec_ptr
add_data 252
inc_ptr
dec_data
loop_end loop_op_1570
loop_op_1578:
dec_ptr
output
inc_ptr
inc_data
loop_start loop_op_1588
loop_op_1583:
dec_ptr
dec_data
inc_ptr
dec_data
loop_end loop_op_1583
loop_op_1588:
dec_ptr
output
inc_ptr
add_data 7
loop_start loop_op_1610
loop_op_1599:
dec_ptr
add_data 249
inc_ptr
dec_data
loop_end loop_op_1599
loop_op_1610:
dec_ptr
// 15
output
set_data 1
dec_ptr
// 14!
dec_data
sub_ptr 3
// 11
set_data 0
inc_ptr
// 12
dec_data
loop_end loop_op_1496
loop_op_1631:
inc_ptr
// 13
dec_data
loop_end loop_op_1305
loop_op_1635:
inc_ptr
// 14
loop_start loop_op_1972
loop_op_1638:
// ;ELSE IF x == var06 THEN PRINT "&Ouml;"
sub_ptr 8
loop_start loop_op_1664
loop_op_1648:
sub_ptr 5
inc_data
dec_ptr
inc_data
add_ptr 6
dec_data
loop_end loop_op_1648
loop_op_1664:
sub_ptr 5
loop_start loop_op_1683
loop_op_1670:
add_ptr 5
inc_data
sub_ptr 5
dec_data
loop_end loop_op_1670
loop_op_1683:
add_ptr 10
loop_start loop_op_1722
loop_op_1694:
sub_ptr 10
inc_data
dec_ptr
// 0
dec_data
add_ptr 11
// 11
dec_data
loop_end loop_op_1694
loop_op_1722:
sub_ptr 10
loop_start loop_op_1756
loop_op_1733:
add_ptr 10
inc_data
sub_ptr 10
dec_data
loop_end loop_op_1733
loop_op_1756:
add_ptr 11
// 12
inc_data
inc_ptr
// 13
inc_data
sub_ptr 13
loop_start loop_op_1815
loop_op_1786:
add_ptr 12
dec_data
sub_ptr 12
set_data 0
loop_end loop_op_1786
loop_op_1815:
add_ptr 11
// 11
inc_ptr
// 12
loop_start loop_op_1967
loop_op_1830:
add_ptr 4
add_data 6
loop_start loop_op_1851
loop_op_1841:
dec_ptr
add_data 6
inc_ptr
dec_data
loop_end loop_op_1841
loop_op_1851:
dec_ptr
add_data 2
output
inc_ptr
add_data 6
loop_start loop_op_1873
loop_op_1863:
dec_ptr
add_data 6
inc_ptr
dec_data
loop_end loop_op_1863
loop_op_1873:
dec_ptr
add_data 5
output
inc_ptr
add_data 6
loop_start loop_op_1898
loop_op_1888:
dec_ptr
add_data 6
inc_ptr
dec_data
loop_end loop_op_1888
loop_op_1898:
dec_ptr
add_data 2
output
inc_ptr
add_data 2
loop_start loop_op_1914
loop_op_1906:
dec_ptr
add_data 252
inc_ptr
dec_data
loop_end loop_op_1906
loop_op_1914:
dec_ptr
output
inc_ptr
inc_data
loop_start loop_op_1924
loop_op_1919:
dec_ptr
dec_data
inc_ptr
dec_data
loop_end loop_op_1919
loop_op_1924:
dec_ptr
output
inc_ptr
add_data 7
loop_start loop_op_1946
loop_op_1935:
dec_ptr
add_data 249
inc_ptr
dec_data
loop_end loop_op_1935
loop_op_1946:
dec_ptr
// 15
output
set_data 1
sub_ptr 2
// 13!
dec_data
sub_ptr 2
// 11
set_data 0
inc_ptr
// 12
dec_data
loop_end loop_op_1830
loop_op_1967:
add_ptr 2
// 14
dec_data
loop_end loop_op_1638
loop_op_1972:
dec_ptr
// 13
loop_start loop_op_2310
loop_op_1975:
// ;ELSE IF x == var07 THEN PRINT "&Uuml;"
sub_ptr 6
loop_start loop_op_2001
loop_op_1983:
sub_ptr 6
inc_data
dec_ptr
inc_data
add_ptr 7
dec_data
loop_end loop_op_1983
loop_op_2001:
sub_ptr 6
loop_start loop_op_2023
loop_op_2008:
add_ptr 6
inc_data
sub_ptr 6
dec_data
loop_end loop_op_2008
loop_op_2023:
add_ptr 10
loop_start loop_op_2062
loop_op_2034:
sub_ptr 10
inc_data
dec_ptr
// 0
dec_data
add_ptr 11
// 11
dec_data
loop_end loop_op_2034
loop_op_2062:
sub_ptr 10
loop_start loop_op_2096
loop_op_2073:
add_ptr 10
inc_data
sub_ptr 10
dec_data
loop_end loop_op_2073
loop_op_2096:
add_ptr 11
// 12
inc_data
add_ptr 2
// 14
inc_data
sub_ptr 14
loop_start loop_op_2157
loop_op_2128:
add_ptr 12
dec_data
sub_ptr 12
set_data 0
loop_end loop_op_2128
loop_op_2157:
add_ptr 11
// 11
inc_ptr
// 12
loop_start loop_op_2306
loop_op_2172:
add_ptr 4
add_data 6
loop_start loop_op_2193
loop_op_2183:
dec_ptr
add_data 6
inc_ptr
dec_data
loop_end loop_op_2183
loop_op_2193:
dec_ptr
add_data 2
output
inc_ptr
add_data 6
loop_start loop_op_2216
loop_op_2205:
dec_ptr
add_data 7
inc_ptr
dec_data
loop_end loop_op_2205
loop_op_2216:
dec_ptr
add_data 5
output
inc_ptr
add_data 5
loop_start loop_op_2240
loop_op_2230:
dec_ptr
add_data 6
inc_ptr
dec_data
loop_end loop_op_2230
loop_op_2240:
dec_ptr
add_data 2
output
inc_ptr
add_data 2
loop_start loop_op_2256
loop_op_2248:
dec_ptr
add_data 252
inc_ptr
dec_data
loop_end loop_op_2248
loop_op_2256:
dec_ptr
output
inc_ptr
inc_data
loop_start loop_op_2266
loop_op_2261:
dec_ptr
dec_data
inc_ptr
dec_data
loop_end loop_op_2261
loop_op_2266:
dec_ptr
output
inc_ptr
add_data 7
loop_start loop_op_2288
loop_op_2277:
dec_ptr
add_data 249
inc_ptr
dec_data
loop_end loop_op_2277
loop_op_2288:
dec_ptr
output
set_data 1
dec_ptr
// !
dec_data
sub_ptr 3
set_data 0
inc_ptr
dec_data
loop_end loop_op_2172
loop_op_2306:
inc_ptr
// 13
dec_data
loop_end loop_op_1975
loop_op_2310:
inc_ptr
// 14
loop_start loop_op_2621
loop_op_2313:
// ;ELSE IF x == var08 THEN PRINT "&gt;"
sub_ptr 6
loop_start loop_op_2341
loop_op_2321:
sub_ptr 7
inc_data
dec_ptr
inc_data
add_ptr 8
dec_data
loop_end loop_op_2321
loop_op_2341:
sub_ptr 7
loop_start loop_op_2366
loop_op_2349:
add_ptr 7
inc_data
sub_ptr 7
dec_data
loop_end loop_op_2349
loop_op_2366:
add_ptr 10
loop_start loop_op_2405
loop_op_2377:
sub_ptr 10
inc_data
dec_ptr
// 0
dec_data
add_ptr 11
// 11
dec_data
loop_end loop_op_2377
loop_op_2405:
sub_ptr 10
loop_start loop_op_2439
loop_op_2416:
add_ptr 10
inc_data
sub_ptr 10
dec_data
loop_end loop_op_2416
loop_op_2439:
add_ptr 11
inc_data
inc_ptr
// 13
inc_data
sub_ptr 13
loop_start loop_op_2497
loop_op_2468:
add_ptr 12
dec_data
sub_ptr 12
set_data 0
loop_end loop_op_2468
loop_op_2497:
add_ptr 12
// 12
loop_start loop_op_2617
loop_op_2511:
add_ptr 4
add_data 6
loop_start loop_op_2532
loop_op_2522:
dec_ptr
add_data 6
inc_ptr
dec_data
loop_end loop_op_2522
loop_op_2532:
dec_ptr
add_data 2
output
inc_ptr
add_data 8
loop_start loop_op_2558
loop_op_2546:
dec_ptr
add_data 8
inc_ptr
dec_data
loop_end loop_op_2546
loop_op_2558:
dec_ptr
inc_data
output
inc_ptr
add_data 3
loop_start loop_op_2574
loop_op_2566:
dec_ptr
add_data 4
inc_ptr
dec_data
loop_end loop_op_2566
loop_op_2574:
dec_ptr
inc_data
output
inc_ptr
add_data 7
loop_start loop_op_2598
loop_op_2586:
dec_ptr
add_data 248
inc_ptr
dec_data
loop_end loop_op_2586
loop_op_2598:
dec_ptr
dec_data
output
set_data 1
sub_ptr 2
// !
dec_data
sub_ptr 2
set_data 0
inc_ptr
dec_data
loop_end loop_op_2511
loop_op_2617:
add_ptr 2
dec_data
loop_end loop_op_2313
loop_op_2621:
dec_ptr
// 13
loop_start loop_op_2939
loop_op_2624:
// ;ELSE IF x == var09 THEN PRINT "&lt;"
sub_ptr 4
loop_start loop_op_2652
loop_op_2630:
sub_ptr 8
inc_data
dec_ptr
inc_data
add_ptr 9
dec_data
loop_end loop_op_2630
loop_op_2652:
sub_ptr 8
loop_start loop_op_2680
loop_op_2661:
add_ptr 8
inc_data
sub_ptr 8
dec_data
loop_end loop_op_2661
loop_op_2680:
add_ptr 10
loop_start loop_op_2719
loop_op_2691:
sub_ptr 10
inc_data
dec_ptr
// 0
dec_data
add_ptr 11
// 11
dec_data
loop_end loop_op_2691
loop_op_2719:
sub_ptr 10
loop_start loop_op_2753
loop_op_2730:
add_ptr 10
inc_data
sub_ptr 10
dec_data
loop_end loop_op_2730
loop_op_2753:
add_ptr 11
inc_data
add_ptr 2
// 14
inc_data
sub_ptr 14
loop_start loop_op_2813
loop_op_2784:
add_ptr 12
dec_data
sub_ptr 12
set_data 0
loop_end loop_op_2784
loop_op_2813:
add_ptr 12
// 12
loop_start loop_op_2936
loop_op_2827:
add_ptr 4
add_data 6
loop_start loop_op_2848
loop_op_2838:
dec_ptr
add_data 6
inc_ptr
dec_data
loop_end loop_op_2838
loop_op_2848:
dec_ptr
add_data 2
output
inc_ptr
add_data 8
loop_start loop_op_2874
loop_op_2862:
dec_ptr
add_data 8
inc_ptr
dec_data
loop_end loop_op_2862
loop_op_2874:
dec_ptr
add_data 6
output
inc_ptr
add_data 2
loop_start loop_op_2894
loop_op_2886:
dec_ptr
add_data 4
inc_ptr
dec_data
loop_end loop_op_2886
loop_op_2894:
dec_ptr
output
inc_ptr
add_data 7
loop_start loop_op_2917
loop_op_2905:
dec_ptr
add_data 248
inc_ptr
dec_data
loop_end loop_op_2905
loop_op_2917:
dec_ptr
dec_data
output
set_data 1
dec_ptr
// !
dec_data
sub_ptr 3
set_data 0
inc_ptr
dec_data
loop_end loop_op_2827
loop_op_2936:
inc_ptr
dec_data
loop_end loop_op_2624
loop_op_2939:
inc_ptr
// 14
loop_start loop_op_3339
loop_op_2942:
// ;ELSE IF x == var10 THEN PRINT "&szlig;"
add_ptr 4
// 18
loop_start loop_op_2989
loop_op_2949:
sub_ptr 17
inc_data
dec_ptr
inc_data
add_ptr 18
dec_data
loop_end loop_op_2949
loop_op_2989:
sub_ptr 17
loop_start loop_op_3044
loop_op_3007:
add_ptr 17
inc_data
sub_ptr 17
dec_data
loop_end loop_op_3007
loop_op_3044:
add_ptr 10
loop_start loop_op_3081
loop_op_3055:
sub_ptr 10
inc_data
dec_ptr
dec_data
add_ptr 11
dec_data
loop_end loop_op_3055
loop_op_3081:
sub_ptr 10
loop_start loop_op_3115
loop_op_3092:
add_ptr 10
inc_data
sub_ptr 10
dec_data
loop_end loop_op_3092
loop_op_3115:
add_ptr 11
inc_data
inc_ptr
// 13
inc_data
sub_ptr 13
loop_start loop_op_3173
loop_op_3144:
add_ptr 12
dec_data
sub_ptr 12
set_data 0
loop_end loop_op_3144
loop_op_3173:
add_ptr 12
// 12
loop_start loop_op_3335
loop_op_3187:
add_ptr 4
add_data 6
loop_start loop_op_3208
loop_op_3198:
dec_ptr
add_data 6
inc_ptr
dec_data
loop_end loop_op_3198
loop_op_3208:
dec_ptr
add_data 2
output
inc_ptr
add_data 8
loop_start loop_op_3235
loop_op_3222:
dec_ptr
add_data 9
inc_ptr
dec_data
loop_end loop_op_3222
loop_op_3235:
dec_ptr
add_data 5
output
inc_ptr
add_data 2
loop_start loop_op_3253
loop_op_3246:
dec_ptr
add_data 3
inc_ptr
dec_data
loop_end loop_op_3246
loop_op_3253:
dec_ptr
inc_data
output
inc_ptr
add_data 3
loop_start loop_op_3269
loop_op_3261:
dec_ptr
add_data 252
inc_ptr
dec_data
loop_end loop_op_3261
loop_op_3269:
dec_ptr
add_data 254
output
inc_ptr
inc_data
loop_start loop_op_3283
loop_op_3276:
dec_ptr
add_data 253
inc_ptr
dec_data
loop_end loop_op_3276
loop_op_3283:
dec_ptr
output
inc_ptr
inc_data
loop_start loop_op_3294
loop_op_3288:
dec_ptr
add_data 254
inc_ptr
dec_data
loop_end loop_op_3288
loop_op_3294:
dec_ptr
output
inc_ptr
add_data 6
loop_start loop_op_3315
loop_op_3304:
dec_ptr
add_data 249
inc_ptr
dec_data
loop_end loop_op_3304
loop_op_3315:
dec_ptr
add_data 254
output
set_data 1
sub_ptr 2
// !
dec_data
sub_ptr 2
set_data 0
inc_ptr
dec_data
loop_end loop_op_3187
loop_op_3335:
add_ptr 2
dec_data
loop_end loop_op_2942
loop_op_3339:
dec_ptr
// 13
loop_start loop_op_3361
loop_op_3342:
// ;ELSE PRINT x
sub_ptr 2
output
set_data 0
add_ptr 4
set_data 1
sub_ptr 2
dec_data
loop_end loop_op_3342
loop_op_3361:
sub_ptr 2
// 11
loop_end loop_op_341
loop_op_3365:
add_ptr 6
inc_data
sub_ptr 2
loop_start loop_op_3396
loop_op_3375:
sub_ptr 5
set_data 1
add_ptr 5
dec_data
add_ptr 2
dec_data
sub_ptr 2
loop_end loop_op_3375
loop_op_3396:
add_ptr 2
loop_start loop_op_3418
loop_op_3399:
sub_ptr 7
set_data 0
add_ptr 7
dec_data
loop_end loop_op_3399
loop_op_3418:
sub_ptr 7
loop_end loop_op_337
loop_op_3426:
// ;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

stl.loop


brainfuck_memory:
reserve dw * 30000
