// The next code was created as part of the bf2fj (Brainfuck to Flipjump) project: https://github.com/tomhea/bf2fj


HEXES_IN_BYTE = 2
BITS_IN_HEX = 4
DEFAULT_LABEL_PADDINGS = 16
// NOTE: standard values, for a program of size 10,000 random bf-ops: w=32, @=21.

stl.startup_and_init_pointers brainfuck_start


ptr: hex.vec w/BITS_IN_HEX, brainfuck_memory  // this is the main data-pointer that brainfuck operates on.

ret_register: bit.bit           // used for the brainfuck ops fast-calls.
inner_ret_register: bit.bit     // used for the read/write *ptr fast-calls.
// Complexity: @-1
def call label < ret_register {
    stl.fcall label, ret_register
}
// Complexity: 1
def return < ret_register {
    stl.fret ret_register
}

def call_inner label < inner_ret_register {
    stl.fcall label, inner_ret_register
}
// Complexity: 1
def return_inner < inner_ret_register {
    stl.fret inner_ret_register
}

temp_byte: hex.vec HEXES_IN_BYTE        // can be changed between read_pointed_byte..() to write_temp_byte(..) calls.

repetition_optimization_byte: hex.vec HEXES_IN_BYTE     // can be changed, as it's an input to data-optimization macros.

PTR_OPTIMIZE_OFFSET_HEX_LENGTH = 3
PTR_OPTIMIZE_OFFSET_HEX_SHIFT = 1
// can be changed, as it's an input to ptr-optimization macros.
repetition_optimization_ptr_offset: hex.vec PTR_OPTIMIZE_OFFSET_HEX_LENGTH

//  Time Complexity: w(0.75@+ 5) + 9@+13   ( ~870 ops, according to the standard values)
// Space Complexity: w(0.75@+29) + 9@+72   (~1700 ops, according to the standard values)
//    temp_byte = stl.pointers.read_byte = *ptr[:2]
def read_pointed_byte_to_temp_byte < ptr, temp_byte {
    hex.read_byte temp_byte, ptr
}
pad DEFAULT_LABEL_PADDINGS
read_pointed_byte_to_temp_byte:
    read_pointed_byte_to_temp_byte
    return_inner

//  Time Complexity: 12@      (~250 ops, according to the standard values)
// Space Complexity: 12@+176  (~430 ops, according to the standard values)
//    *ptr[:2] ^= (temp_byte ^ _original_byte)
def write_temp_byte_to_pointed_byte < hex.pointers.read_byte, temp_byte {
    hex.xor HEXES_IN_BYTE, hex.pointers.read_byte, temp_byte
    hex.pointers.xor_byte_to_flip_ptr hex.pointers.read_byte
}
pad DEFAULT_LABEL_PADDINGS
write_temp_byte_to_pointed_byte:
    write_temp_byte_to_pointed_byte
    return_inner


// Required init macros. Space Complexity: 3,142 (according to the standard values).
hex.tables.init_shared
hex.add.init
hex.sub.init




// ---------- Pointer Macros ----------

// Time Complexity: 10@+14  (224 ops, according to the standard valuess)
//   Executes the '>' command:  ptr++
def inc_ptr < inc_ptr {
    call inc_ptr
}
pad DEFAULT_LABEL_PADDINGS
inc_ptr:    // space-complexity is about: 600 (according to the standard values).
    hex.ptr_inc ptr
    return


// Time Complexity: 10@+23  (=233 according to the standard values)
//   Executes the '<' command:  ptr--
def dec_ptr < dec_ptr {
    call dec_ptr
}
pad DEFAULT_LABEL_PADDINGS
dec_ptr:    // space-complexity is about: 600 (according to the standard values).
    hex.ptr_dec ptr
    return




// ---------- Data Macros ----------

// Time Complexity: w(0.75@+ 5) + 26@+1  (~1210 according to the standard values)
//   Executes the '+' command:  (*ptr)++
def inc_data < inc_data {
    call inc_data
}
pad DEFAULT_LABEL_PADDINGS
inc_data:   // space-complexity is about: 131 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.inc HEXES_IN_BYTE, temp_byte
    call_inner write_temp_byte_to_pointed_byte
    return


// Time Complexity: w(0.75@+ 5) + 26@+1  (~1210 according to the standard values)
//   Executes the '-' command:  (*ptr)--
def dec_data < dec_data {
    call dec_data
}
pad DEFAULT_LABEL_PADDINGS
dec_data:   // space-complexity is about: 131 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.dec HEXES_IN_BYTE, temp_byte
    call_inner write_temp_byte_to_pointed_byte
    return




// ---------- IO Macros ----------

//  Time Complexity: w(0.75@+ 5) + 13@+5   (~940 ops, according to the standard values)
//   Executes the '.' command:  print_byte(*ptr)
def output < output {
    call output
}
pad DEFAULT_LABEL_PADDINGS
output:     // space-complexity is about: 63 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.print temp_byte
    return


// Time Complexity: w(0.75@+ 5) + 28@+15  (~1270 according to the standard values)
//   Executes the ',' command:  *ptr = input_byte()
def input < input {
    call input
}
pad DEFAULT_LABEL_PADDINGS
input:      // space-complexity is about: 161 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.input temp_byte
    call_inner write_temp_byte_to_pointed_byte
    return




// ---------- Looping Macros ----------

// Time Complexity: w(0.75@+ 5) + 12@+7  (~920 according to the standard values)
//   Executes the '[' command:  if (*ptr == 0) goto loop-end
def loop_start after_loop_end_label < read_pointed_byte_to_temp_byte, temp_byte {
    call_inner read_pointed_byte_to_temp_byte
    hex.if0 HEXES_IN_BYTE, temp_byte, after_loop_end_label
}
// Time Complexity: w(0.75@+ 5) + 12@+7  (~920 according to the standard values)
//   Executes the ']' command:  if (*ptr != 0) goto loop-start
def loop_end after_loop_start_label < read_pointed_byte_to_temp_byte, temp_byte {
    call_inner read_pointed_byte_to_temp_byte
    hex.if1 HEXES_IN_BYTE, temp_byte, after_loop_start_label
}



// ---------- Pointer Optimization Macros ----------

// Time Complexity: w(0.75@+ 5) + 44@+50  (~1640 according to the standard values)
//   Executes multiple '>','<' commands:  ptr += value  (value must be 0 <= value < 256)
def add_ptr value < repetition_optimization_ptr_offset, add_ptr {
    hex.set \
        PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        repetition_optimization_ptr_offset, \
        (value * dw) >> (BITS_IN_HEX * PTR_OPTIMIZE_OFFSET_HEX_SHIFT)
    call add_ptr
}
pad DEFAULT_LABEL_PADDINGS
add_ptr:    // space-complexity is about: 699
    hex.add_shifted \
        w/BITS_IN_HEX,  PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        ptr,            repetition_optimization_ptr_offset, \
        PTR_OPTIMIZE_OFFSET_HEX_SHIFT
    return


// Time Complexity: w(0.75@+ 5) + 44@+59  (~1650 according to the standard values)
//   Executes multiple '<','>' commands:  ptr -= value  (value must be 0 <= value < 256)
def sub_ptr value < repetition_optimization_ptr_offset, sub_ptr {
    hex.set \
        PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        repetition_optimization_ptr_offset, \
        (value * dw) >> (BITS_IN_HEX * PTR_OPTIMIZE_OFFSET_HEX_SHIFT)
    call sub_ptr
}
pad DEFAULT_LABEL_PADDINGS
sub_ptr:    // space-complexity is about: 711
    hex.sub_shifted \
        w/BITS_IN_HEX,  PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        ptr,            repetition_optimization_ptr_offset, \
        PTR_OPTIMIZE_OFFSET_HEX_SHIFT
    return




// ---------- Data Optimization Macros ----------


// Time Complexity: w(0.75@+ 5) + 34@+33  (~1410 according to the standard values)
//   Executes multiple '+'/'-' commands:  (*ptr) += value  (value is positive, yet can overflow)
def add_data value < repetition_optimization_byte, add_data {
    hex.set HEXES_IN_BYTE, repetition_optimization_byte, value
    call add_data
}
pad DEFAULT_LABEL_PADDINGS
add_data:   // space-complexity is about: 313
    call_inner read_pointed_byte_to_temp_byte
    hex.add HEXES_IN_BYTE, temp_byte, repetition_optimization_byte
    call_inner write_temp_byte_to_pointed_byte
    return


// Time Complexity: w(0.75@+ 5) + 30@+9  (~1300 according to the standard values)
//   Executes "[-]"/"[+]" and then multiple '+'/'-' commands:  (*ptr) = value  (value is positive, yet can overflow)
def set_data value < repetition_optimization_byte, set_data {
    hex.set HEXES_IN_BYTE, repetition_optimization_byte, value
    call set_data
}
pad DEFAULT_LABEL_PADDINGS
set_data:   // space-complexity is about: 173
    call_inner read_pointed_byte_to_temp_byte
    hex.mov HEXES_IN_BYTE, temp_byte, repetition_optimization_byte
    call_inner write_temp_byte_to_pointed_byte
    return




brainfuck_start:

// The next code was optimized by bf2fj:

add_ptr 3
inc_data
loop_start loop_op_523
loop_op_4:
input
inc_ptr
add_data 7
loop_start loop_op_24
loop_op_14:
dec_ptr
add_data 250
inc_ptr
dec_data
loop_end loop_op_14
loop_op_24:
dec_ptr
loop_start loop_op_34
loop_op_26:
dec_data
inc_ptr
inc_data
inc_ptr
inc_data
sub_ptr 2
loop_end loop_op_26
loop_op_34:
add_ptr 2
loop_start loop_op_44
loop_op_37:
dec_data
sub_ptr 2
inc_data
add_ptr 2
loop_end loop_op_37
loop_op_44:
dec_ptr
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_57
loop_op_50:
inc_ptr
dec_data
dec_ptr
set_data 0
loop_end loop_op_50
loop_op_57:
inc_ptr
loop_start loop_op_76
loop_op_59:
dec_data
sub_ptr 2
set_data 5
add_ptr 5
loop_end loop_op_59
loop_op_76:
sub_ptr 2
loop_start loop_op_87
loop_op_79:
dec_data
inc_ptr
inc_data
inc_ptr
inc_data
sub_ptr 2
loop_end loop_op_79
loop_op_87:
add_ptr 2
loop_start loop_op_97
loop_op_90:
dec_data
sub_ptr 2
inc_data
add_ptr 2
loop_end loop_op_90
loop_op_97:
dec_ptr
add_data 254
inc_ptr
inc_data
dec_ptr
loop_start loop_op_111
loop_op_104:
inc_ptr
dec_data
dec_ptr
set_data 0
loop_end loop_op_104
loop_op_111:
inc_ptr
loop_start loop_op_133
loop_op_113:
dec_data
sub_ptr 2
set_data 8
add_ptr 5
loop_end loop_op_113
loop_op_133:
sub_ptr 2
loop_start loop_op_144
loop_op_136:
dec_data
inc_ptr
inc_data
inc_ptr
inc_data
sub_ptr 2
loop_end loop_op_136
loop_op_144:
add_ptr 2
loop_start loop_op_154
loop_op_147:
dec_data
sub_ptr 2
inc_data
add_ptr 2
loop_end loop_op_147
loop_op_154:
dec_ptr
add_data 253
inc_ptr
inc_data
dec_ptr
loop_start loop_op_169
loop_op_162:
inc_ptr
dec_data
dec_ptr
set_data 0
loop_end loop_op_162
loop_op_169:
inc_ptr
loop_start loop_op_189
loop_op_171:
dec_data
sub_ptr 2
set_data 6
add_ptr 5
loop_end loop_op_171
loop_op_189:
sub_ptr 2
loop_start loop_op_200
loop_op_192:
dec_data
inc_ptr
inc_data
inc_ptr
inc_data
sub_ptr 2
loop_end loop_op_192
loop_op_200:
add_ptr 2
loop_start loop_op_210
loop_op_203:
dec_data
sub_ptr 2
inc_data
add_ptr 2
loop_end loop_op_203
loop_op_210:
dec_ptr
add_data 252
inc_ptr
inc_data
dec_ptr
loop_start loop_op_226
loop_op_219:
inc_ptr
dec_data
dec_ptr
set_data 0
loop_end loop_op_219
loop_op_226:
inc_ptr
loop_start loop_op_247
loop_op_228:
dec_data
sub_ptr 2
set_data 7
add_ptr 5
loop_end loop_op_228
loop_op_247:
sub_ptr 2
loop_start loop_op_258
loop_op_250:
dec_data
inc_ptr
inc_data
inc_ptr
inc_data
sub_ptr 2
loop_end loop_op_250
loop_op_258:
add_ptr 2
loop_start loop_op_268
loop_op_261:
dec_data
sub_ptr 2
inc_data
add_ptr 2
loop_end loop_op_261
loop_op_268:
add_data 6
loop_start loop_op_282
loop_op_275:
dec_ptr
add_data 253
inc_ptr
dec_data
loop_end loop_op_275
loop_op_282:
inc_data
dec_ptr
loop_start loop_op_292
loop_op_285:
inc_ptr
dec_data
dec_ptr
set_data 0
loop_end loop_op_285
loop_op_292:
inc_ptr
loop_start loop_op_310
loop_op_294:
dec_data
sub_ptr 2
set_data 4
add_ptr 5
loop_end loop_op_294
loop_op_310:
sub_ptr 2
loop_start loop_op_321
loop_op_313:
dec_data
inc_ptr
inc_data
inc_ptr
inc_data
sub_ptr 2
loop_end loop_op_313
loop_op_321:
add_ptr 2
loop_start loop_op_331
loop_op_324:
dec_data
sub_ptr 2
inc_data
add_ptr 2
loop_end loop_op_324
loop_op_331:
add_data 5
loop_start loop_op_345
loop_op_337:
dec_ptr
add_data 252
inc_ptr
dec_data
loop_end loop_op_337
loop_op_345:
inc_data
dec_ptr
loop_start loop_op_355
loop_op_348:
inc_ptr
dec_data
dec_ptr
set_data 0
loop_end loop_op_348
loop_op_355:
inc_ptr
loop_start loop_op_372
loop_op_357:
dec_data
sub_ptr 2
set_data 3
add_ptr 5
loop_end loop_op_357
loop_op_372:
sub_ptr 2
loop_start loop_op_383
loop_op_375:
dec_data
inc_ptr
inc_data
inc_ptr
inc_data
sub_ptr 2
loop_end loop_op_375
loop_op_383:
add_ptr 2
loop_start loop_op_393
loop_op_386:
dec_data
sub_ptr 2
inc_data
add_ptr 2
loop_end loop_op_386
loop_op_393:
add_data 7
loop_start loop_op_412
loop_op_401:
dec_ptr
add_data 249
inc_ptr
dec_data
loop_end loop_op_401
loop_op_412:
inc_data
dec_ptr
loop_start loop_op_422
loop_op_415:
inc_ptr
dec_data
dec_ptr
set_data 0
loop_end loop_op_415
loop_op_422:
inc_ptr
loop_start loop_op_437
loop_op_424:
dec_data
sub_ptr 2
set_data 1
add_ptr 5
loop_end loop_op_424
loop_op_437:
sub_ptr 2
loop_start loop_op_448
loop_op_440:
dec_data
inc_ptr
inc_data
inc_ptr
inc_data
sub_ptr 2
loop_end loop_op_440
loop_op_448:
add_ptr 2
loop_start loop_op_458
loop_op_451:
dec_data
sub_ptr 2
inc_data
add_ptr 2
loop_end loop_op_451
loop_op_458:
add_data 7
loop_start loop_op_477
loop_op_466:
dec_ptr
add_data 249
inc_ptr
dec_data
loop_end loop_op_466
loop_op_477:
dec_ptr
add_data 254
inc_ptr
inc_data
dec_ptr
loop_start loop_op_491
loop_op_484:
inc_ptr
dec_data
dec_ptr
set_data 0
loop_end loop_op_484
loop_op_491:
inc_ptr
loop_start loop_op_507
loop_op_493:
dec_data
sub_ptr 2
set_data 2
add_ptr 5
loop_end loop_op_493
loop_op_507:
dec_ptr
add_data 4
loop_start loop_op_521
loop_op_513:
dec_ptr
add_data 252
inc_ptr
dec_data
loop_end loop_op_513
loop_op_521:
dec_ptr
loop_end loop_op_4
loop_op_523:
sub_ptr 3
loop_start loop_op_531
loop_op_527:
sub_ptr 3
loop_end loop_op_527
loop_op_531:
add_ptr 3
loop_start loop_op_1242
loop_op_535:
add_data 254
inc_ptr
inc_data
dec_ptr
loop_start loop_op_544
loop_op_541:
inc_ptr
dec_data
loop_end loop_op_541
loop_op_544:
inc_ptr
loop_start loop_op_548
loop_op_546:
inc_ptr
loop_end loop_op_546
loop_op_548:
sub_ptr 2
add_data 2
inc_ptr
loop_start loop_op_626
loop_op_554:
dec_data
sub_ptr 5
inc_data
loop_start loop_op_620
loop_op_562:
inc_ptr
add_data 254
inc_ptr
inc_data
dec_ptr
loop_start loop_op_572
loop_op_569:
inc_ptr
dec_data
loop_end loop_op_569
loop_op_572:
inc_ptr
loop_start loop_op_582
loop_op_574:
dec_data
sub_ptr 2
inc_data
add_ptr 3
loop_end loop_op_574
loop_op_582:
sub_ptr 2
inc_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_592
loop_op_589:
inc_ptr
dec_data
loop_end loop_op_589
loop_op_592:
inc_ptr
loop_start loop_op_602
loop_op_594:
dec_data
sub_ptr 2
dec_data
add_ptr 3
loop_end loop_op_594
loop_op_602:
sub_ptr 2
inc_data
dec_ptr
loop_start loop_op_616
loop_op_607:
dec_data
sub_ptr 3
inc_data
add_ptr 3
loop_end loop_op_607
loop_op_616:
sub_ptr 3
loop_end loop_op_562
loop_op_620:
add_ptr 5
loop_end loop_op_554
loop_op_626:
dec_ptr
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_635
loop_op_632:
inc_ptr
dec_data
loop_end loop_op_632
loop_op_635:
inc_ptr
loop_start loop_op_639
loop_op_637:
inc_ptr
loop_end loop_op_637
loop_op_639:
sub_ptr 2
inc_data
inc_ptr
loop_start loop_op_851
loop_op_644:
dec_data
dec_ptr
dec_data
add_ptr 3
loop_start loop_op_655
loop_op_651:
add_ptr 3
loop_end loop_op_651
loop_op_655:
inc_ptr
loop_start loop_op_667
loop_op_657:
dec_data
inc_ptr
inc_data
add_ptr 2
inc_data
sub_ptr 3
loop_end loop_op_657
loop_op_667:
inc_ptr
loop_start loop_op_674
loop_op_669:
dec_data
dec_ptr
inc_data
inc_ptr
loop_end loop_op_669
loop_op_674:
add_ptr 2
loop_start loop_op_690
loop_op_677:
dec_data
loop_start loop_op_686
loop_op_679:
dec_data
add_ptr 2
inc_data
sub_ptr 2
loop_end loop_op_679
loop_op_686:
inc_data
add_ptr 2
loop_end loop_op_677
loop_op_690:
inc_data
inc_ptr
loop_start loop_op_698
loop_op_693:
dec_data
inc_ptr
inc_data
dec_ptr
loop_end loop_op_693
loop_op_698:
inc_ptr
loop_start loop_op_713
loop_op_700:
dec_data
dec_ptr
inc_data
add_ptr 3
set_data 1
sub_ptr 2
loop_end loop_op_700
loop_op_713:
inc_data
add_ptr 2
loop_start loop_op_724
loop_op_717:
dec_data
sub_ptr 2
dec_data
add_ptr 2
loop_end loop_op_717
loop_op_724:
sub_ptr 4
loop_start loop_op_745
loop_op_729:
dec_data
add_ptr 2
loop_start loop_op_740
loop_op_733:
dec_data
sub_ptr 2
inc_data
add_ptr 2
loop_end loop_op_733
loop_op_740:
sub_ptr 4
loop_end loop_op_729
loop_op_745:
add_ptr 2
loop_start loop_op_761
loop_op_748:
dec_data
sub_ptr 5
inc_data
add_ptr 5
loop_end loop_op_748
loop_op_761:
sub_ptr 7
loop_start loop_op_787
loop_op_769:
add_ptr 2
loop_start loop_op_781
loop_op_772:
dec_data
sub_ptr 3
inc_data
add_ptr 3
loop_end loop_op_772
loop_op_781:
sub_ptr 5
loop_end loop_op_769
loop_op_787:
inc_data
add_ptr 2
loop_start loop_op_849
loop_op_791:
inc_ptr
add_data 254
inc_ptr
inc_data
dec_ptr
loop_start loop_op_801
loop_op_798:
inc_ptr
dec_data
loop_end loop_op_798
loop_op_801:
inc_ptr
loop_start loop_op_811
loop_op_803:
dec_data
sub_ptr 2
dec_data
add_ptr 3
loop_end loop_op_803
loop_op_811:
sub_ptr 2
inc_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_821
loop_op_818:
inc_ptr
dec_data
loop_end loop_op_818
loop_op_821:
inc_ptr
loop_start loop_op_831
loop_op_823:
dec_data
sub_ptr 2
inc_data
add_ptr 3
loop_end loop_op_823
loop_op_831:
sub_ptr 2
inc_data
dec_ptr
loop_start loop_op_845
loop_op_836:
dec_data
add_ptr 3
inc_data
sub_ptr 3
loop_end loop_op_836
loop_op_845:
add_ptr 3
loop_end loop_op_791
loop_op_849:
dec_ptr
loop_end loop_op_644
loop_op_851:
dec_ptr
add_data 253
inc_ptr
inc_data
dec_ptr
loop_start loop_op_862
loop_op_859:
inc_ptr
dec_data
loop_end loop_op_859
loop_op_862:
inc_ptr
loop_start loop_op_886
loop_op_864:
dec_data
add_ptr 2
loop_start loop_op_872
loop_op_868:
add_ptr 3
loop_end loop_op_868
loop_op_872:
inc_ptr
inc_data
sub_ptr 4
loop_start loop_op_883
loop_op_879:
sub_ptr 3
loop_end loop_op_879
loop_op_883:
add_ptr 2
loop_end loop_op_864
loop_op_886:
sub_ptr 2
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_896
loop_op_893:
inc_ptr
dec_data
loop_end loop_op_893
loop_op_896:
inc_ptr
loop_start loop_op_920
loop_op_898:
dec_data
add_ptr 2
loop_start loop_op_906
loop_op_902:
add_ptr 3
loop_end loop_op_902
loop_op_906:
inc_ptr
dec_data
sub_ptr 4
loop_start loop_op_917
loop_op_913:
sub_ptr 3
loop_end loop_op_913
loop_op_917:
add_ptr 2
loop_end loop_op_898
loop_op_920:
sub_ptr 2
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_930
loop_op_927:
inc_ptr
dec_data
loop_end loop_op_927
loop_op_930:
inc_ptr
loop_start loop_op_997
loop_op_932:
dec_data
add_ptr 2
loop_start loop_op_940
loop_op_936:
add_ptr 3
loop_end loop_op_936
loop_op_940:
inc_ptr
loop_start loop_op_952
loop_op_942:
dec_data
inc_ptr
inc_data
add_ptr 2
inc_data
sub_ptr 3
loop_end loop_op_942
loop_op_952:
inc_ptr
loop_start loop_op_959
loop_op_954:
dec_data
dec_ptr
inc_data
inc_ptr
loop_end loop_op_954
loop_op_959:
add_ptr 2
loop_start loop_op_975
loop_op_962:
dec_data
loop_start loop_op_971
loop_op_964:
dec_data
add_ptr 2
inc_data
sub_ptr 2
loop_end loop_op_964
loop_op_971:
inc_data
add_ptr 2
loop_end loop_op_962
loop_op_975:
inc_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_984
loop_op_980:
dec_data
sub_ptr 2
loop_end loop_op_980
loop_op_984:
sub_ptr 5
loop_start loop_op_994
loop_op_990:
sub_ptr 3
loop_end loop_op_990
loop_op_994:
add_ptr 2
loop_end loop_op_932
loop_op_997:
sub_ptr 2
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_1007
loop_op_1004:
inc_ptr
dec_data
loop_end loop_op_1004
loop_op_1007:
inc_ptr
loop_start loop_op_1074
loop_op_1009:
dec_data
add_ptr 2
loop_start loop_op_1017
loop_op_1013:
add_ptr 3
loop_end loop_op_1013
loop_op_1017:
inc_ptr
loop_start loop_op_1029
loop_op_1019:
dec_data
inc_ptr
inc_data
add_ptr 2
inc_data
sub_ptr 3
loop_end loop_op_1019
loop_op_1029:
inc_ptr
loop_start loop_op_1036
loop_op_1031:
dec_data
dec_ptr
inc_data
inc_ptr
loop_end loop_op_1031
loop_op_1036:
add_ptr 2
loop_start loop_op_1052
loop_op_1039:
dec_data
loop_start loop_op_1048
loop_op_1041:
dec_data
add_ptr 2
inc_data
sub_ptr 2
loop_end loop_op_1041
loop_op_1048:
inc_data
add_ptr 2
loop_end loop_op_1039
loop_op_1052:
inc_data
inc_ptr
dec_data
dec_ptr
loop_start loop_op_1061
loop_op_1057:
dec_data
sub_ptr 2
loop_end loop_op_1057
loop_op_1061:
sub_ptr 5
loop_start loop_op_1071
loop_op_1067:
sub_ptr 3
loop_end loop_op_1067
loop_op_1071:
add_ptr 2
loop_end loop_op_1009
loop_op_1074:
sub_ptr 2
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_1084
loop_op_1081:
inc_ptr
dec_data
loop_end loop_op_1081
loop_op_1084:
inc_ptr
loop_start loop_op_1151
loop_op_1086:
dec_data
add_ptr 2
loop_start loop_op_1094
loop_op_1090:
add_ptr 3
loop_end loop_op_1090
loop_op_1094:
inc_ptr
loop_start loop_op_1106
loop_op_1096:
dec_data
inc_ptr
inc_data
add_ptr 2
inc_data
sub_ptr 3
loop_end loop_op_1096
loop_op_1106:
inc_ptr
loop_start loop_op_1113
loop_op_1108:
dec_data
dec_ptr
inc_data
inc_ptr
loop_end loop_op_1108
loop_op_1113:
add_ptr 2
loop_start loop_op_1129
loop_op_1116:
dec_data
loop_start loop_op_1125
loop_op_1118:
dec_data
add_ptr 2
inc_data
sub_ptr 2
loop_end loop_op_1118
loop_op_1125:
inc_data
add_ptr 2
loop_end loop_op_1116
loop_op_1129:
inc_data
inc_ptr
output
dec_ptr
loop_start loop_op_1138
loop_op_1134:
dec_data
sub_ptr 2
loop_end loop_op_1134
loop_op_1138:
sub_ptr 5
loop_start loop_op_1148
loop_op_1144:
sub_ptr 3
loop_end loop_op_1144
loop_op_1148:
add_ptr 2
loop_end loop_op_1086
loop_op_1151:
sub_ptr 2
dec_data
inc_ptr
inc_data
dec_ptr
loop_start loop_op_1161
loop_op_1158:
inc_ptr
dec_data
loop_end loop_op_1158
loop_op_1161:
inc_ptr
loop_start loop_op_1228
loop_op_1163:
dec_data
add_ptr 2
loop_start loop_op_1171
loop_op_1167:
add_ptr 3
loop_end loop_op_1167
loop_op_1171:
inc_ptr
loop_start loop_op_1183
loop_op_1173:
dec_data
inc_ptr
inc_data
add_ptr 2
inc_data
sub_ptr 3
loop_end loop_op_1173
loop_op_1183:
inc_ptr
loop_start loop_op_1190
loop_op_1185:
dec_data
dec_ptr
inc_data
inc_ptr
loop_end loop_op_1185
loop_op_1190:
add_ptr 2
loop_start loop_op_1206
loop_op_1193:
dec_data
loop_start loop_op_1202
loop_op_1195:
dec_data
add_ptr 2
inc_data
sub_ptr 2
loop_end loop_op_1195
loop_op_1202:
inc_data
add_ptr 2
loop_end loop_op_1193
loop_op_1206:
inc_data
inc_ptr
input
dec_ptr
loop_start loop_op_1215
loop_op_1211:
dec_data
sub_ptr 2
loop_end loop_op_1211
loop_op_1215:
sub_ptr 5
loop_start loop_op_1225
loop_op_1221:
sub_ptr 3
loop_end loop_op_1221
loop_op_1225:
add_ptr 2
loop_end loop_op_1163
loop_op_1228:
sub_ptr 2
add_data 8
add_ptr 3
loop_end loop_op_535
loop_op_1242:

stl.loop


brainfuck_memory:
reserve dw * 30000
