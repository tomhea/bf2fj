// The next code was created as part of the bf2fj (Brainfuck to Flipjump) project: https://github.com/tomhea/bf2fj


HEXES_IN_BYTE = 2
BITS_IN_HEX = 4
DEFAULT_LABEL_PADDINGS = 16
// NOTE: standard values, for a program of size 10,000 random bf-ops: w=32, @=21.

stl.startup_and_init_pointers brainfuck_start


ptr: hex.vec w/BITS_IN_HEX, brainfuck_memory  // this is the main data-pointer that brainfuck operates on.

ret_register: bit.bit           // used for the brainfuck ops fast-calls.
inner_ret_register: bit.bit     // used for the read/write *ptr fast-calls.
// Complexity: @-1
def call label < ret_register {
    stl.fcall label, ret_register
}
// Complexity: 1
def return < ret_register {
    stl.fret ret_register
}

def call_inner label < inner_ret_register {
    stl.fcall label, inner_ret_register
}
// Complexity: 1
def return_inner < inner_ret_register {
    stl.fret inner_ret_register
}

temp_byte: hex.vec HEXES_IN_BYTE        // can be changed between read_pointed_byte..() to write_temp_byte(..) calls.

repetition_optimization_byte: hex.vec HEXES_IN_BYTE     // can be changed, as it's an input to data-optimization macros.

PTR_OPTIMIZE_OFFSET_HEX_LENGTH = 3
PTR_OPTIMIZE_OFFSET_HEX_SHIFT = 1
// can be changed, as it's an input to ptr-optimization macros.
repetition_optimization_ptr_offset: hex.vec PTR_OPTIMIZE_OFFSET_HEX_LENGTH

//  Time Complexity: w(0.75@+ 5) + 9@+13   ( ~870 ops, according to the standard values)
// Space Complexity: w(0.75@+29) + 9@+72   (~1700 ops, according to the standard values)
//    temp_byte = stl.pointers.read_byte = *ptr[:2]
def read_pointed_byte_to_temp_byte < ptr, temp_byte {
    hex.read_byte temp_byte, ptr
}
pad DEFAULT_LABEL_PADDINGS
read_pointed_byte_to_temp_byte:
    read_pointed_byte_to_temp_byte
    return_inner

//  Time Complexity: 12@      (~250 ops, according to the standard values)
// Space Complexity: 12@+176  (~430 ops, according to the standard values)
//    *ptr[:2] ^= (temp_byte ^ _original_byte)
def write_temp_byte_to_pointed_byte < hex.pointers.read_byte, temp_byte {
    hex.xor HEXES_IN_BYTE, hex.pointers.read_byte, temp_byte
    hex.pointers.xor_byte_to_flip_ptr hex.pointers.read_byte
}
pad DEFAULT_LABEL_PADDINGS
write_temp_byte_to_pointed_byte:
    write_temp_byte_to_pointed_byte
    return_inner


// Required init macros. Space Complexity: 3,142 (according to the standard values).
hex.tables.init_shared
hex.add.init
hex.sub.init




// ---------- Pointer Macros ----------

// Time Complexity: 10@+14  (224 ops, according to the standard valuess)
//   Executes the '>' command:  ptr++
def inc_ptr < inc_ptr {
    call inc_ptr
}
pad DEFAULT_LABEL_PADDINGS
inc_ptr:    // space-complexity is about: 600 (according to the standard values).
    hex.ptr_inc ptr
    return


// Time Complexity: 10@+23  (=233 according to the standard values)
//   Executes the '<' command:  ptr--
def dec_ptr < dec_ptr {
    call dec_ptr
}
pad DEFAULT_LABEL_PADDINGS
dec_ptr:    // space-complexity is about: 600 (according to the standard values).
    hex.ptr_dec ptr
    return




// ---------- Data Macros ----------

// Time Complexity: w(0.75@+ 5) + 26@+1  (~1210 according to the standard values)
//   Executes the '+' command:  (*ptr)++
def inc_data < inc_data {
    call inc_data
}
pad DEFAULT_LABEL_PADDINGS
inc_data:   // space-complexity is about: 131 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.inc HEXES_IN_BYTE, temp_byte
    call_inner write_temp_byte_to_pointed_byte
    return


// Time Complexity: w(0.75@+ 5) + 26@+1  (~1210 according to the standard values)
//   Executes the '-' command:  (*ptr)--
def dec_data < dec_data {
    call dec_data
}
pad DEFAULT_LABEL_PADDINGS
dec_data:   // space-complexity is about: 131 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.dec HEXES_IN_BYTE, temp_byte
    call_inner write_temp_byte_to_pointed_byte
    return




// ---------- IO Macros ----------

//  Time Complexity: w(0.75@+ 5) + 13@+5   (~940 ops, according to the standard values)
//   Executes the '.' command:  print_byte(*ptr)
def output < output {
    call output
}
pad DEFAULT_LABEL_PADDINGS
output:     // space-complexity is about: 63 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.print temp_byte
    return


// Time Complexity: w(0.75@+ 5) + 28@+15  (~1270 according to the standard values)
//   Executes the ',' command:  *ptr = input_byte()
def input < input {
    call input
}
pad DEFAULT_LABEL_PADDINGS
input:      // space-complexity is about: 161 (according to the standard values).
    call_inner read_pointed_byte_to_temp_byte
    hex.input temp_byte
    call_inner write_temp_byte_to_pointed_byte
    return




// ---------- Looping Macros ----------

// Time Complexity: w(0.75@+ 5) + 12@+7  (~920 according to the standard values)
//   Executes the '[' command:  if (*ptr == 0) goto loop-end
def loop_start after_loop_end_label < read_pointed_byte_to_temp_byte, temp_byte {
    call_inner read_pointed_byte_to_temp_byte
    hex.if0 HEXES_IN_BYTE, temp_byte, after_loop_end_label
}
// Time Complexity: w(0.75@+ 5) + 12@+7  (~920 according to the standard values)
//   Executes the ']' command:  if (*ptr != 0) goto loop-start
def loop_end after_loop_start_label < read_pointed_byte_to_temp_byte, temp_byte {
    call_inner read_pointed_byte_to_temp_byte
    hex.if1 HEXES_IN_BYTE, temp_byte, after_loop_start_label
}



// ---------- Pointer Optimization Macros ----------

// Time Complexity: w(0.75@+ 5) + 44@+50  (~1640 according to the standard values)
//   Executes multiple '>','<' commands:  ptr += value  (value must be 0 <= value < 256)
def add_ptr value < repetition_optimization_ptr_offset, add_ptr {
    hex.set \
        PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        repetition_optimization_ptr_offset, \
        (value * dw) >> (BITS_IN_HEX * PTR_OPTIMIZE_OFFSET_HEX_SHIFT)
    call add_ptr
}
pad DEFAULT_LABEL_PADDINGS
add_ptr:    // space-complexity is about: 699
    hex.add_shifted \
        w/BITS_IN_HEX,  PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        ptr,            repetition_optimization_ptr_offset, \
        PTR_OPTIMIZE_OFFSET_HEX_SHIFT
    return


// Time Complexity: w(0.75@+ 5) + 44@+59  (~1650 according to the standard values)
//   Executes multiple '<','>' commands:  ptr -= value  (value must be 0 <= value < 256)
def sub_ptr value < repetition_optimization_ptr_offset, sub_ptr {
    hex.set \
        PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        repetition_optimization_ptr_offset, \
        (value * dw) >> (BITS_IN_HEX * PTR_OPTIMIZE_OFFSET_HEX_SHIFT)
    call sub_ptr
}
pad DEFAULT_LABEL_PADDINGS
sub_ptr:    // space-complexity is about: 711
    hex.sub_shifted \
        w/BITS_IN_HEX,  PTR_OPTIMIZE_OFFSET_HEX_LENGTH, \
        ptr,            repetition_optimization_ptr_offset, \
        PTR_OPTIMIZE_OFFSET_HEX_SHIFT
    return




// ---------- Data Optimization Macros ----------


// Time Complexity: w(0.75@+ 5) + 34@+33  (~1410 according to the standard values)
//   Executes multiple '+'/'-' commands:  (*ptr) += value  (value is positive, yet can overflow)
def add_data value < repetition_optimization_byte, add_data {
    hex.set HEXES_IN_BYTE, repetition_optimization_byte, value
    call add_data
}
pad DEFAULT_LABEL_PADDINGS
add_data:   // space-complexity is about: 313
    call_inner read_pointed_byte_to_temp_byte
    hex.add HEXES_IN_BYTE, temp_byte, repetition_optimization_byte
    call_inner write_temp_byte_to_pointed_byte
    return


// Time Complexity: w(0.75@+ 5) + 30@+9  (~1300 according to the standard values)
//   Executes "[-]"/"[+]" and then multiple '+'/'-' commands:  (*ptr) = value  (value is positive, yet can overflow)
def set_data value < repetition_optimization_byte, set_data {
    hex.set HEXES_IN_BYTE, repetition_optimization_byte, value
    call set_data
}
pad DEFAULT_LABEL_PADDINGS
set_data:   // space-complexity is about: 173
    call_inner read_pointed_byte_to_temp_byte
    hex.mov HEXES_IN_BYTE, temp_byte, repetition_optimization_byte
    call_inner write_temp_byte_to_pointed_byte
    return




brainfuck_start:

// The next code was optimized by bf2fj:

inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 6
inc_ptr
add_data 2
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 6
inc_ptr
add_data 2
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 3
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 6
inc_ptr
add_data 2
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
inc_data
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 3
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 2
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 3
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 2
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 3
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 3
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 3
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 3
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 3
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 3
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
inc_data
inc_ptr
add_data 4
inc_ptr
add_data 2
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
add_data 6
inc_ptr
add_data 4
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 3
inc_ptr
add_data 6
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 7
inc_ptr
add_data 5
inc_ptr
add_data 6
inc_ptr
add_data 2
inc_ptr
add_data 7
inc_ptr
add_data 4
inc_ptr
add_data 4
inc_ptr
inc_data
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 5
inc_ptr
add_data 7
add_ptr 2
add_data 6
loop_start loop_op_2559
loop_op_2544:
dec_data
add_ptr 3
add_data 7
sub_ptr 3
loop_end loop_op_2544
loop_op_2559:
add_ptr 3
loop_start loop_op_2574
loop_op_2563:
dec_data
dec_ptr
inc_data
dec_ptr
inc_data
dec_ptr
inc_data
add_ptr 3
loop_end loop_op_2563
loop_op_2574:
sub_ptr 3
inc_data
inc_ptr
add_data 3
inc_ptr
add_data 4
inc_ptr
add_data 10
loop_start loop_op_2611
loop_op_2599:
dec_data
add_ptr 2
add_data 6
sub_ptr 2
loop_end loop_op_2599
loop_op_2611:
add_ptr 2
loop_start loop_op_2622
loop_op_2614:
dec_data
dec_ptr
inc_data
dec_ptr
inc_data
add_ptr 2
loop_end loop_op_2614
loop_op_2622:
dec_ptr
add_data 2
output
inc_ptr
add_data 9
loop_start loop_op_2653
loop_op_2637:
dec_data
add_ptr 2
add_data 10
sub_ptr 2
loop_end loop_op_2637
loop_op_2653:
add_ptr 2
loop_start loop_op_2664
loop_op_2656:
dec_data
dec_ptr
inc_data
dec_ptr
inc_data
add_ptr 2
loop_end loop_op_2656
loop_op_2664:
sub_ptr 2
inc_data
inc_ptr
add_data 3
loop_start loop_op_2674
loop_op_2672:
dec_ptr
loop_end loop_op_2672
loop_op_2674:
dec_ptr
loop_start loop_op_2678
loop_op_2676:
dec_ptr
loop_end loop_op_2676
loop_op_2678:
inc_ptr
loop_start loop_op_2756
loop_op_2680:
loop_start loop_op_2683
loop_op_2681:
inc_ptr
loop_end loop_op_2681
loop_op_2683:
inc_ptr
loop_start loop_op_2687
loop_op_2685:
inc_ptr
loop_end loop_op_2685
loop_op_2687:
add_ptr 2
loop_start loop_op_2692
loop_op_2690:
inc_ptr
loop_end loop_op_2690
loop_op_2692:
inc_data
loop_start loop_op_2696
loop_op_2694:
dec_ptr
loop_end loop_op_2694
loop_op_2696:
sub_ptr 2
loop_start loop_op_2701
loop_op_2699:
dec_ptr
loop_end loop_op_2699
loop_op_2701:
dec_ptr
loop_start loop_op_2705
loop_op_2703:
dec_ptr
loop_end loop_op_2703
loop_op_2705:
inc_ptr
loop_start loop_op_2737
loop_op_2707:
loop_start loop_op_2710
loop_op_2708:
inc_ptr
loop_end loop_op_2708
loop_op_2710:
inc_ptr
output
loop_start loop_op_2715
loop_op_2713:
inc_ptr
loop_end loop_op_2713
loop_op_2715:
add_ptr 2
loop_start loop_op_2720
loop_op_2718:
inc_ptr
loop_end loop_op_2718
loop_op_2720:
dec_ptr
inc_data
loop_start loop_op_2725
loop_op_2723:
dec_ptr
loop_end loop_op_2723
loop_op_2725:
sub_ptr 2
loop_start loop_op_2730
loop_op_2728:
dec_ptr
loop_end loop_op_2728
loop_op_2730:
dec_ptr
loop_start loop_op_2734
loop_op_2732:
dec_ptr
loop_end loop_op_2732
loop_op_2734:
inc_ptr
dec_data
loop_end loop_op_2707
loop_op_2737:
inc_ptr
loop_start loop_op_2741
loop_op_2739:
inc_ptr
loop_end loop_op_2739
loop_op_2741:
add_ptr 5
output
loop_start loop_op_2750
loop_op_2748:
dec_ptr
loop_end loop_op_2748
loop_op_2750:
dec_ptr
loop_start loop_op_2754
loop_op_2752:
dec_ptr
loop_end loop_op_2752
loop_op_2754:
inc_ptr
loop_end loop_op_2680
loop_op_2756:
inc_ptr
loop_start loop_op_2760
loop_op_2758:
inc_ptr
loop_end loop_op_2758
loop_op_2760:
add_ptr 2
loop_start loop_op_3033
loop_op_2763:
add_data 254
dec_ptr
inc_data
inc_ptr
loop_start loop_op_2772
loop_op_2769:
dec_ptr
dec_data
loop_end loop_op_2769
loop_op_2772:
dec_ptr
loop_start loop_op_2776
loop_op_2774:
dec_ptr
loop_end loop_op_2774
loop_op_2776:
inc_ptr
loop_start loop_op_2800
loop_op_2778:
inc_ptr
add_data 7
dec_ptr
dec_data
sub_ptr 2
loop_start loop_op_2793
loop_op_2791:
dec_ptr
loop_end loop_op_2791
loop_op_2793:
inc_ptr
output
loop_start loop_op_2798
loop_op_2796:
inc_ptr
loop_end loop_op_2796
loop_op_2798:
inc_ptr
loop_end loop_op_2778
loop_op_2800:
inc_ptr
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_2809
loop_op_2806:
dec_ptr
dec_data
loop_end loop_op_2806
loop_op_2809:
dec_ptr
loop_start loop_op_2813
loop_op_2811:
dec_ptr
loop_end loop_op_2811
loop_op_2813:
inc_ptr
loop_start loop_op_2837
loop_op_2815:
inc_ptr
add_data 6
dec_ptr
dec_data
sub_ptr 2
loop_start loop_op_2829
loop_op_2827:
dec_ptr
loop_end loop_op_2827
loop_op_2829:
add_ptr 2
output
loop_start loop_op_2835
loop_op_2833:
inc_ptr
loop_end loop_op_2833
loop_op_2835:
inc_ptr
loop_end loop_op_2815
loop_op_2837:
inc_ptr
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_2846
loop_op_2843:
dec_ptr
dec_data
loop_end loop_op_2843
loop_op_2846:
dec_ptr
loop_start loop_op_2850
loop_op_2848:
dec_ptr
loop_end loop_op_2848
loop_op_2850:
inc_ptr
loop_start loop_op_2874
loop_op_2852:
inc_ptr
add_data 5
dec_ptr
dec_data
sub_ptr 2
loop_start loop_op_2865
loop_op_2863:
dec_ptr
loop_end loop_op_2863
loop_op_2865:
add_ptr 3
output
loop_start loop_op_2872
loop_op_2870:
inc_ptr
loop_end loop_op_2870
loop_op_2872:
inc_ptr
loop_end loop_op_2852
loop_op_2874:
inc_ptr
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_2883
loop_op_2880:
dec_ptr
dec_data
loop_end loop_op_2880
loop_op_2883:
dec_ptr
loop_start loop_op_2887
loop_op_2885:
dec_ptr
loop_end loop_op_2885
loop_op_2887:
inc_ptr
loop_start loop_op_2911
loop_op_2889:
inc_ptr
add_data 4
dec_ptr
dec_data
sub_ptr 2
loop_start loop_op_2901
loop_op_2899:
dec_ptr
loop_end loop_op_2899
loop_op_2901:
add_ptr 4
output
loop_start loop_op_2909
loop_op_2907:
inc_ptr
loop_end loop_op_2907
loop_op_2909:
inc_ptr
loop_end loop_op_2889
loop_op_2911:
inc_ptr
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_2920
loop_op_2917:
dec_ptr
dec_data
loop_end loop_op_2917
loop_op_2920:
dec_ptr
loop_start loop_op_2924
loop_op_2922:
dec_ptr
loop_end loop_op_2922
loop_op_2924:
inc_ptr
loop_start loop_op_2948
loop_op_2926:
inc_ptr
add_data 3
dec_ptr
dec_data
sub_ptr 2
loop_start loop_op_2937
loop_op_2935:
dec_ptr
loop_end loop_op_2935
loop_op_2937:
add_ptr 5
output
loop_start loop_op_2946
loop_op_2944:
inc_ptr
loop_end loop_op_2944
loop_op_2946:
inc_ptr
loop_end loop_op_2926
loop_op_2948:
inc_ptr
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_2957
loop_op_2954:
dec_ptr
dec_data
loop_end loop_op_2954
loop_op_2957:
dec_ptr
loop_start loop_op_2961
loop_op_2959:
dec_ptr
loop_end loop_op_2959
loop_op_2961:
inc_ptr
loop_start loop_op_2985
loop_op_2963:
inc_ptr
add_data 2
dec_ptr
dec_data
sub_ptr 2
loop_start loop_op_2973
loop_op_2971:
dec_ptr
loop_end loop_op_2971
loop_op_2973:
add_ptr 6
output
loop_start loop_op_2983
loop_op_2981:
inc_ptr
loop_end loop_op_2981
loop_op_2983:
inc_ptr
loop_end loop_op_2963
loop_op_2985:
inc_ptr
dec_data
dec_ptr
inc_data
inc_ptr
loop_start loop_op_2994
loop_op_2991:
dec_ptr
dec_data
loop_end loop_op_2991
loop_op_2994:
dec_ptr
loop_start loop_op_2998
loop_op_2996:
dec_ptr
loop_end loop_op_2996
loop_op_2998:
inc_ptr
loop_start loop_op_3022
loop_op_3000:
inc_ptr
inc_data
dec_ptr
dec_data
sub_ptr 2
loop_start loop_op_3009
loop_op_3007:
dec_ptr
loop_end loop_op_3007
loop_op_3009:
add_ptr 7
output
loop_start loop_op_3020
loop_op_3018:
inc_ptr
loop_end loop_op_3018
loop_op_3020:
inc_ptr
loop_end loop_op_3000
loop_op_3022:
inc_ptr
set_data 0
sub_ptr 2
inc_data
add_ptr 3
loop_end loop_op_2763
loop_op_3033:

stl.loop


brainfuck_memory:
reserve dw * 30000
